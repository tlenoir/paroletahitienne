{"version":3,"sources":["components/Firebase/firebase.jsx","components/Session/index.jsx","components/Navigation/index.jsx","components/Home/index.jsx","components/Liste/index.jsx","components/Parole/index.jsx","components/Profile/index.jsx","components/App/index.jsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","React","createContext","user","uid","displayName","email","emailVerified","Boolean","metadata","creationTime","lastSignInTime","photoURL","phoneNumber","Firebase","children","useAuthState","auth","Provider","value","App","LogIn","LogOut","history","useState","error","setError","passwd","lastname","firstname","username","register","setRegister","handleChange","e","target","name","showLogin","setShowLogin","showCreate","setShowCreate","handleCloseLogin","handleCloseCreate","ButtonToolbar","Button","className","onClick","variant","Modal","show","onHide","Header","closeButton","Title","Form","onSubmit","event","signInWithEmailAndPassword","then","catch","code","ERROR_CODE_ACCOUNT_NOEXISTS","message","preventDefault","Body","Group","as","Row","controlId","Label","column","sm","Col","Control","onChange","type","Footer","Alert","size","createUserWithEmailAndPassword","authUser","firestore","collection","doc","set","dateCreatedAccount","Timestamp","fromDate","Date","currentUser","sendEmailVerification","url","updateProfile","ERROR_CODE_ACCOUNT_EXISTS","required","Dropdown","Toggle","id","icon","faUserCog","Menu","Item","Link","to","eventKey","Divider","signOut","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","href","aria-controls","Collapse","Nav","Home","Liste","useCollection","snapshotListenOptions","includeMetadataChanges","loading","Spinner","animation","AjoutParole","ListGroup","docs","map","key","data","titre","isAnonymous","AjouterFavoris","artiste","createBy","setShow","parole","item","setItem","validated","setValidated","handleShow","faPlus","noValidate","currentTarget","checkValidity","add","createAt","ref","stopPropagation","md","placeholder","Feedback","rows","Check","label","feedback","favsPath","state","setState","refFavUser","setRefFavUser","useEffect","where","get","path","faStar","pull","delete","color","Parole","useParams","useDocument","Jumbotron","fluid","Container","initialising","Tab","defaultActiveKey","faMusic","faListOl","faUser","Content","Pane","Profile","Chansons","Favoris","Card","body","border","Image","src","roundedCircle","Text","toDate","toString","CardColumns","i","faTrashAlt","Subtitle","title","exact","component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iQAmBAA,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,+BACZE,YAAaF,sCACbG,UAAWH,eACXI,cAAeJ,2BACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAKnB,IAAMQ,EAAkBC,IAAMC,cAAc,CACxCC,KAAM,CACFC,IAAK,GACLC,YAAa,GACbC,MAAO,GACPC,cAAeC,QACfC,SAAU,CACNC,aAAc,GACdC,eAAgB,IAEpBC,SAAU,GACVC,YAAa,MAIrB,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACbC,YAAa3B,IAAS4B,QAA9Bd,EADqB,oBAE5B,OACI,kBAACH,EAAgBkB,SAAjB,CAA0BC,MAAOhB,GAC5BY,G,oIC9BE,SAASK,IAAO,IAAD,EACXJ,YAAa3B,IAAS4B,QAA9Bd,EADmB,oBAE1B,OACI,+BACMA,GAAQ,kBAACkB,EAAD,MACTlB,GAAQ,kBAACmB,EAAD,OAKrB,SAASD,EAAT,GAA4B,EAAXE,QAAY,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,OAEQF,mBAAS,CACrClB,MAAO,GACPqB,OAAQ,GACRC,SAAU,GACVC,UAAW,GACXC,SAAU,KAPU,mBAEjBC,EAFiB,KAEPC,EAFO,KAUlBC,EAAe,SAACC,GAClBF,EAAY,eACLD,EADI,eAENG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOhB,UAbV,EAiBUK,oBAAS,GAjBnB,mBAiBjBa,EAjBiB,KAiBNC,EAjBM,OAkBYd,oBAAS,GAlBrB,mBAkBjBe,EAlBiB,KAkBLC,EAlBK,KAmBlBC,EAAmB,kBAAMH,GAAa,IACtCI,EAAoB,kBAAMF,GAAc,IAgE9C,OACI,8BACI,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,OAAOC,QAlEb,kBAAMR,GAAa,IAkEoBS,QAAQ,QAA3D,iBAGJ,kBAACC,EAAA,EAAD,CAAOC,KAAMZ,EAAWa,OAAQT,GAC5B,kBAACO,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,wBAEJ,kBAACC,EAAA,EAAD,CAAMC,SAnEM,SAACC,GACrBnE,IAAS4B,OAAOwC,2BAA2B1B,EAASzB,MAAOyB,EAASJ,QAC/D+B,MAAK,WACFpB,GAAa,GACbZ,EAAS,OAEZiC,OAAM,SAAAlC,GACCA,EAAMmC,OAASC,GACfnC,EAASD,EAAMqC,YAE3BN,EAAMO,mBA0DM,kBAACf,EAAA,EAAMgB,KAAP,KACI,kBAACV,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,sBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,eAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAActD,MAAOY,EAASzB,MAAO8B,KAAK,QAAQsC,SAAUzC,EAAc0C,KAAK,YAIvF,kBAACrB,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,yBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAAcE,KAAK,WAAWxD,MAAOY,EAASJ,OAAQS,KAAK,SAASsC,SAAUzC,OAI1F,kBAACe,EAAA,EAAM4B,OAAP,KACI,kBAAChC,EAAA,EAAD,CAAQG,QAAQ,YAAYD,QAASL,GAArC,UAGA,kBAACG,EAAA,EAAD,CAAQG,QAAQ,UAAU4B,KAAK,UAA/B,gBAGClD,GACG,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAUtB,KAIrC,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQkC,KAAK,KAAKhC,QAzGT,WACrBR,GAAa,GACbE,GAAc,IAuG2CO,QAAQ,QAArD,wBAIR,kBAACC,EAAA,EAAD,CAAOC,KAAMV,EAAYW,OAAQR,GAC7B,kBAACM,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,wCAEJ,kBAACC,EAAA,EAAD,CAAMC,SAlFlB,SAAuBC,GACnBnE,IAAS4B,OACJ8D,+BAA+BhD,EAASzB,MAAOyB,EAASJ,QACxD+B,MAAK,SAAAsB,GAEF,OAAOC,sBAAYC,WAAW,SAASC,IAAIH,EAAS7E,KAAKC,KACpDgF,IAAI,CACD9E,MAAOyB,EAASzB,MAChBuB,UAAWE,EAASF,UACpBD,SAAUG,EAASH,SACnByD,mBAAoBhG,IAAS4F,UAAUK,UAAUC,SAAS,IAAIC,MAC9D1D,SAAUC,EAASD,cAG9B4B,MAAK,WACF,OAAOrE,IAAS4B,OAAOwE,YAAYC,sBAAsB,CACrDC,IAAKnG,kDAGZkE,MAAK,WACF,OAAOrE,IAAS4B,OAAOwE,YAAYG,cAAc,CAC7CvF,YAAa0B,EAASD,cAG7B6B,OAAM,SAAAlC,GACCA,EAAMmC,OAASiC,GACfnE,EAASD,EAAMqC,YAE3BN,EAAMO,mBAuDM,kBAACf,EAAA,EAAMgB,KAAP,KACI,kBAACV,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,sBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAAcE,KAAK,QAAQmB,UAAQ,EAAC3E,MAAOY,EAASzB,MAAO8B,KAAK,QAAQsC,SAAUzC,MAI1F,kBAACqB,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,yBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAAcqB,UAAQ,EAAC3E,MAAOY,EAASJ,OAAQS,KAAK,SAASsC,SAAUzC,EAAc0C,KAAK,eAGlG,kBAACrB,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,sBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,OAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAAc5B,UAAU,kBAAkB8B,KAAK,OAAOmB,UAAQ,EAAC3E,MAAOY,EAASH,SAAUQ,KAAK,WAAWsC,SAAUzC,MAG3H,kBAACqB,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,sBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAAc5B,UAAU,kBAAkB8B,KAAK,OAAOmB,UAAQ,EAAC3E,MAAOY,EAASF,UAAWO,KAAK,YAAYsC,SAAUzC,MAG7H,kBAACqB,EAAA,EAAKW,MAAN,CAAYC,GAAIC,IAAKC,UAAU,sBAC3B,kBAACd,EAAA,EAAKe,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,kBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACjB,EAAA,EAAKmB,QAAN,CAAcE,KAAK,OAAOmB,UAAQ,EAAC3E,MAAOY,EAASD,SAAUM,KAAK,WAAWsC,SAAUzC,OAInG,kBAACe,EAAA,EAAM4B,OAAP,KACI,kBAAChC,EAAA,EAAD,CAAQG,QAAQ,YAAYD,QAASJ,GAArC,WAGA,kBAACE,EAAA,EAAD,CAAQG,QAAQ,UAAU4B,KAAK,UAA/B,eAGClD,GACG,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAUtB,OASrD,SAASH,IAIL,OACI,kBAACqB,EAAA,EAAD,KACI,kBAACoD,EAAA,EAAD,KACI,kBAACA,EAAA,EAASC,OAAV,CAAiBjD,QAAQ,OAAOkD,GAAG,qBAC/B,kBAAC,IAAD,CACIC,KAAMC,IACNrB,KAAK,QAGb,kBAACiB,EAAA,EAASK,KAAV,CAAevD,UAAU,0BACrB,kBAACkD,EAAA,EAASM,KAAV,CAAenC,GAAIoC,OAAMC,GAAG,4BAA4BC,SAAS,KAAjE,WACA,kBAACT,EAAA,EAASU,QAAV,MACA,kBAACV,EAAA,EAASM,KAAV,CAAevD,QAfX,WAChBzD,IAAS4B,OAAOyF,WAciCF,SAAS,KAA9C,wBAOpB,IAAMX,EAA4B,4BAC5BhC,EAA8B,sBC5OrB,SAAS8C,IACpB,OACI,kBAACC,EAAA,EAAD,CAAQ/D,UAAU,OAAOgE,kBAAgB,EAACC,OAAO,KAAKC,GAAG,SACrD,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,qBACA,kBAACL,EAAA,EAAOZ,OAAR,CAAekB,gBAAc,0BAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBlB,GAAG,yBAChB,kBAACmB,EAAA,EAAD,CAAKvE,UAAU,WACX,kBAAC,gBAAD,CAAe0D,GAAG,sBACd,kBAACa,EAAA,EAAId,KAAL,cAEJ,kBAAC,gBAAD,CAAeC,GAAG,2BACd,kBAACa,EAAA,EAAId,KAAL,iBAIZ,kBAACM,EAAA,EAAOO,SAAR,CAAiBtE,UAAU,uBACvB,kBAAC,EAAD,QCnBD,SAASwE,IACpB,OACI,yC,qCCWO,SAASC,IAAS,IAAD,EAEbtG,YAAa3B,IAAS4B,QAA9Bd,EAFqB,sBAIIoH,YAC5BlI,IAAS4F,YAAYC,WAAW,WAChC,CACIsC,sBAAuB,CAAEC,wBAAwB,KAP7B,mBAIrBtG,EAJqB,KAIduG,EAJc,KAILjG,EAJK,KAW5B,OACI,6BACKA,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAf,WAAiCtB,GAC1CiG,GACG,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO7E,QAAQ,YAIlC5B,GACI,6BACI,kBAAC0G,EAAD,MACA,kBAACC,EAAA,EAAD,CAAW/E,QAAQ,SACd5B,EAAM4G,KAAKC,KAAI,SAAC7C,GAAD,OACZ,kBAAC2C,EAAA,EAAUzB,KAAX,CAAgBtD,QAAQ,QAAQmB,GAAIoC,OAChCC,GAAE,kCAA6BpB,EAAIc,IAAMgC,IAAK9C,EAAIc,IACjDd,EAAI+C,OAAOC,MACXhI,IAASA,EAAKiI,aACX,kBAACC,EAAD,CAAgBH,KAAM,CAClBjC,GAAId,EAAIc,GACRkC,MAAOhD,EAAI+C,OAAOC,MAClBG,QAASnD,EAAI+C,OAAOI,QACpBC,SAAUpD,EAAI+C,OAAOK,UACtBnI,IAAKD,EAAKC,aAYrD,SAASyH,IAAe,IAAD,EAEJ7G,YAAa3B,IAAS4B,QAA9Bd,EAFY,sBAGKqB,oBAAS,GAHd,mBAGZyB,EAHY,KAGNuF,EAHM,OAIKhH,mBAAS,CAC7B2G,MAAO,GACPG,QAAS,GACTG,OAAQ,KAPO,mBAIZC,EAJY,KAINC,EAJM,OASenH,oBAAS,GATxB,mBASZoH,EATY,KASDC,EATC,KAWb5G,EAAe,SAACC,GAClByG,EAAQ,eACDD,EADA,eAEFxG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOhB,UAI5B2H,EAAa,WACfN,GAASvF,IAoCb,OACI,6BACI,kBAACL,EAAA,EAAD,CAAQG,QAAQ,OAAOD,QAASgG,GAC5B,kBAAC,IAAD,CAAiBjG,UAAU,OAAOqD,KAAM6C,IAAQjE,KAAK,OADzD,uBAKA,kBAAC9B,EAAA,EAAD,CAAOC,KAAMA,EAAMC,OAAQ4F,GACvB,kBAAC9F,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,sCAEJ,kBAACC,EAAA,EAAD,CAAM0F,YAAU,EAACJ,UAAWA,EAAWrF,SA3C9B,SAACC,GACLA,EAAMyF,cACVC,iBACLjE,sBAAYC,WAAW,WAAWiE,IAAlC,eACOT,EADP,CAEIU,SAAU/J,IAAS4F,UAAUK,UAAUC,SAAS,IAAIC,MACpDpF,IAAKD,EAAOA,EAAKC,IAAM,YACvBmI,SAAUpI,EAAOA,EAAKE,YAAc,eACrCqD,MAAK,SAAC2F,GACDlJ,GACA8E,sBAAYC,WAAZ,gBAAgC/E,EAAKC,IAArC,cAAqD+I,IAAI,CACrDlD,GAAIoD,EAAIpD,GACRmD,SAAU/J,IAAS4F,UAAUK,UAAUC,SAAS,IAAIC,MACpD2C,MAAOO,EAAKP,MACZG,QAASI,EAAKJ,UACf5E,MAAK,WACJiF,EAAQ,CACJR,MAAO,GACPG,QAAS,GACTG,OAAQ,KAEZI,GAAa,SAIzBL,GAAQ,IAERK,GAAa,GACjBrF,EAAMO,iBACNP,EAAM8F,oBAeM,kBAACtG,EAAA,EAAMgB,KAAP,KACI,kBAACV,EAAA,EAAKa,IAAN,KACI,kBAACb,EAAA,EAAKW,MAAN,CAAYC,GAAIM,IAAK+E,GAAG,IAAInF,UAAU,sBAClC,kBAACd,EAAA,EAAKe,MAAN,cACA,kBAACf,EAAA,EAAKmB,QAAN,CACIqB,UAAQ,EACR1D,KAAK,QACLjB,MAAOuH,EAAKP,MACZzD,SAAUzC,EACV0C,KAAK,OACL6E,YAAY,4BAEhB,kBAAClG,EAAA,EAAKmB,QAAQgF,SAAd,qBAEJ,kBAACnG,EAAA,EAAKW,MAAN,CAAYC,GAAIM,IAAK+E,GAAG,IAAInF,UAAU,sBAClC,kBAACd,EAAA,EAAKe,MAAN,gBACA,kBAACf,EAAA,EAAKmB,QAAN,CACIqB,UAAQ,EACR1D,KAAK,UACLjB,MAAOuH,EAAKJ,QACZ5D,SAAUzC,EACV0C,KAAK,OACL6E,YAAY,8BAEhB,kBAAClG,EAAA,EAAKmB,QAAQgF,SAAd,sBAGR,kBAACnG,EAAA,EAAKW,MAAN,CAAYG,UAAU,gCAClB,kBAACd,EAAA,EAAKe,MAAN,eACA,kBAACf,EAAA,EAAKmB,QAAN,CACIqB,UAAQ,EACR1D,KAAK,SACLjB,MAAOuH,EAAKD,OACZ/D,SAAUzC,EACViC,GAAG,WAAWwF,KAAK,MACvB,kBAACpG,EAAA,EAAKmB,QAAQgF,SAAd,sBAGR,kBAACzG,EAAA,EAAM4B,OAAP,KACI,kBAACtB,EAAA,EAAKW,MAAN,KACI,kBAACX,EAAA,EAAKqG,MAAN,CACI7D,UAAQ,EACR8D,MAAM,gCACNC,SAAS,uCAGjB,kBAACjH,EAAA,EAAD,CAAQG,QAAQ,YAAYD,QAASgG,GAArC,WAGA,kBAAClG,EAAA,EAAD,CAAQG,QAAQ,UAAU4B,KAAK,UAA/B,mBAWxB,SAAS0D,EAAT,GAAwC,IAAdH,EAAa,EAAbA,KAAM9H,EAAO,EAAPA,IAEtB0J,EAAQ,gBAAY1J,EAAZ,cAFqB,EAIToB,oBAAS,GAJA,mBAI5BuI,EAJ4B,KAIrBC,EAJqB,OAKCxI,mBAAS,IALV,mBAK5ByI,EAL4B,KAKhBC,EALgB,KAOnCC,qBAAU,WACNlF,sBAAYC,WAAW4E,GAClBM,MAAM,KAAM,KAAMlC,EAAKjC,IAAIoE,MAC3B3G,MAAK,SAAAwE,GACEA,EAAKpD,OACLkF,GAAS,GACTE,EAAchC,EAAKH,KAAK,GAAGsB,IAAIiB,aAmB/C,OACI,kBAAC,IAAD,CACIpE,KAAMqE,IACNC,KAAK,QACL1F,KAAK,KACLhC,QAnBe,SAACU,GACfuG,GAKD9E,sBAAYE,IAAI8E,GAAYQ,SAC5BT,GAAS,GACTE,EAAc,MANdjF,sBAAYC,WAAW4E,GAAUX,IAAIjB,GACrC8B,GAAS,IAObxG,EAAM8F,kBACN9F,EAAMO,kBASF2G,MAAOX,EAAQ,QAAU,K,sBC1NtB,SAASY,IAAU,IACtB1E,EAAO2E,cAAP3E,GADqB,EAEG4E,YAC5BxL,IAAS4F,YAAYE,IAArB,kBAAoCc,IACpC,CACIuB,sBAAuB,CAAEC,wBAAwB,KAL5B,mBAEtBtG,EAFsB,KAEfuG,EAFe,KAENjG,EAFM,KAQ7B,OACI,6BACKA,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAf,WAAiCtB,GAC1CiG,GAAW,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO7E,QAAQ,YAC7C5B,GACG,kBAAC2J,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,4BAAK7J,EAAM+G,OAAOC,OAClB,6BACKhH,EAAM+G,OAAOO,W,wCCV3B,SAASrH,IAAO,IAAD,EACUJ,YAAa3B,IAAS4B,QADhC,mBACnBd,EADmB,KACb8K,EADa,KACCxJ,EADD,KAE1B,OACI,6BACKA,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAf,WAAiCtB,EAAMqC,SAChDmH,GAAgB,kBAACtD,EAAA,EAAD,CAASC,UAAU,OAAO7E,QAAQ,YAClD5C,GACG,kBAAC+K,EAAA,EAAIF,UAAL,CAAe/E,GAAG,oBAAoBkF,iBAAiB,SACnD,kBAAChH,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAK+E,GAAI,GACL,kBAACnC,EAAA,EAAD,CAAKrE,QAAQ,OAAOF,UAAU,uBAC1B,kBAACuE,EAAA,EAAIf,KAAL,KACI,kBAACe,EAAA,EAAId,KAAL,CAAUE,SAAS,SACf,kBAAC,IAAD,CAAiBN,KAAMkF,MACvB,kBAAC,IAAD,CAAiBlF,KAAMmF,QAG/B,kBAACjE,EAAA,EAAIf,KAAL,KACI,kBAACe,EAAA,EAAId,KAAL,CAAUE,SAAS,UACf,kBAAC,IAAD,CAAiBN,KAAMqE,QAG/B,kBAACnD,EAAA,EAAIf,KAAL,KACI,kBAACe,EAAA,EAAId,KAAL,CAAUE,SAAS,SACf,kBAAC,IAAD,CAAiBN,KAAMoF,UAKvC,kBAAC9G,EAAA,EAAD,CAAK+E,GAAI,GACL,kBAAC2B,EAAA,EAAIK,QAAL,KACI,kBAACL,EAAA,EAAIM,KAAL,CAAUhF,SAAS,SACf,kBAACiF,EAAD,CAASrL,IAAKD,EAAKC,OAEvB,kBAAC8K,EAAA,EAAIM,KAAL,CAAUhF,SAAS,SACf,kBAACkF,EAAD,CAAUtL,IAAKD,EAAKC,OAExB,kBAAC8K,EAAA,EAAIM,KAAL,CAAUhF,SAAS,UACf,kBAACmF,EAAD,CAASvL,IAAKD,EAAKC,YAOzCD,GAAQ,yFAMtB,SAASsL,EAAT,GAA2B,IAARrL,EAAO,EAAPA,IAAO,EACUyK,YAAY5F,sBAAYE,IAAZ,gBAAyB/E,KAD/C,mBACfe,EADe,KACRuG,EADQ,KACCjG,EADD,KAEtB,OACI,6BACI,kBAACmK,EAAA,EAAD,CAAM/I,UAAU,OAAOgJ,MAAI,GAA3B,WACCpK,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAf,WAAiCtB,EAAMqC,SAChD4D,GAAW,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO7E,QAAQ,aAC5C2E,GAAWvG,GACT,kBAACyK,EAAA,EAAD,CAAME,OAAO,QAAQjJ,UAAU,eAC3B,kBAACsB,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACI,kBAACuH,EAAA,EAAD,CAAOC,IAAI,kCAAkCC,eAAa,KAE9D,kBAACzH,EAAA,EAAD,OAEJ,kBAACoH,EAAA,EAAK5H,KAAN,KACI,kBAAC4H,EAAA,EAAKvI,MAAN,KAAalC,EAAM+G,OAAOtG,SAA1B,IAAqCT,EAAM+G,OAAOrG,WAClD,kBAAC+J,EAAA,EAAKM,KAAN,yBACsB/K,EAAM+G,OAAOpG,UAEnC,kBAAC8J,EAAA,EAAKM,KAAN,qBACe/K,EAAM+G,OAAO7C,mBAAmB8G,SAASC,eAShF,SAAST,EAAT,GAA2B,IAARvL,EAAO,EAAPA,IAAO,EAEUmH,YAC5BtC,sBAAYC,WAAZ,gBAAgC9E,EAAhC,eACA,CACIoH,sBAAuB,CAAEC,wBAAwB,KALnC,mBAEftG,EAFe,KAERuG,EAFQ,KAECjG,EAFD,KAatB,OACI,6BACI,kBAACmK,EAAA,EAAD,CAAM/I,UAAU,OAAOgJ,MAAI,GAA3B,WACCpK,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAf,WAAiCtB,EAAMqC,SAChD4D,GAAW,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO7E,QAAQ,aAC5C2E,GAAWvG,GACT,kBAACkL,EAAA,EAAD,KACKlL,EAAM4G,KAAKC,KAAI,SAAC7C,EAAKmH,GAAN,OACZ,kBAACV,EAAA,EAAD,CAAM3D,IAAK9C,EAAIc,GAAI6F,OAAO,QACtB,kBAACF,EAAA,EAAKzI,OAAN,KACKmJ,EAAI,EACL,kBAAC,IAAD,CACIpG,KAAMqG,IACN/B,KAAK,QACL1F,KAAK,KACLhC,QAAS,SAAAZ,GAAC,OApBpBmH,EAoBqClE,EAAIkE,IAAIiB,KApBxC9G,EAoB8CtB,EAnBrE+C,sBAAYE,IAAIkE,GAAKoB,cACrBjH,EAAMO,iBAFW,IAACsF,EAAK7F,GAqBKkH,MAAM,SAGd,kBAACkB,EAAA,EAAK5H,KAAN,KACI,kBAAC4H,EAAA,EAAKvI,MAAN,KAAa8B,EAAI+C,OAAOC,OACxB,kBAACyD,EAAA,EAAKY,SAAN,CAAe3J,UAAU,mBAAzB,YACcsC,EAAI+C,OAAOI,SAEzB,4BAAQzF,UAAU,qBAAlB,kBACgB,0BAAM4J,MAAOtH,EAAI+C,OAAOK,UAAWpD,EAAI+C,OAAOK,WAE9D,kBAACqD,EAAA,EAAKtF,KAAN,CAAWpC,GAAIoC,OAAMC,GAAE,kCAA6BpB,EAAI+C,OAAOjC,KAA/D,oBAYhC,SAASyF,EAAT,GAA4B,IAARtL,EAAO,EAAPA,IAAO,EAESmH,YAC5BtC,sBAAYC,WAAZ,gBAAgC9E,EAAhC,cACA,CACIoH,sBAAuB,CAAEC,wBAAwB,KALlC,mBAEhBtG,EAFgB,KAETuG,EAFS,KAEAjG,EAFA,KAQvB,OACI,6BACI,kBAACmK,EAAA,EAAD,CAAM/I,UAAU,OAAOgJ,MAAI,GAA3B,YACCpK,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,UAAf,WAAiCtB,EAAMqC,UAC/CrC,GAAS,kBAACoD,EAAA,EAAD,CAAO9B,QAAQ,QAAf,oEACV2E,GAAW,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO7E,QAAQ,aAC5C2E,GAAWvG,GACT,kBAACkL,EAAA,EAAD,KACKlL,EAAM4G,KAAKC,KAAI,SAAC7C,EAAKmH,GAAN,OACZ,kBAACV,EAAA,EAAD,CAAM3D,IAAK9C,EAAIc,GAAI6F,OAAO,WACtB,kBAACF,EAAA,EAAKzI,OAAN,KACKmJ,EAAI,GAST,kBAACV,EAAA,EAAK5H,KAAN,KACI,kBAAC4H,EAAA,EAAKvI,MAAN,KAAa8B,EAAI+C,OAAOC,OACxB,kBAACyD,EAAA,EAAKY,SAAN,CAAe3J,UAAU,mBAAzB,YACcsC,EAAI+C,OAAOI,SAEzB,4BAAQzF,UAAU,qBAAlB,iBACe,0BAAM4J,MAAOtH,EAAI+C,OAAOkB,SAAS+C,SAASC,YAAajH,EAAI+C,OAAOkB,SAAS+C,SAASC,aAEnG,kBAACR,EAAA,EAAKtF,KAAN,CAAWpC,GAAIoC,OAAMC,GAAE,kCAA6BpB,EAAI+C,OAAOjC,KAA/D,oBC1JjB7E,OAlBf,WACI,OACI,kBAAC,gBAAD,KACI,kBAACN,EAAD,KACI,kBAAC6F,EAAD,MACA,yBAAK9D,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6J,OAAK,EAACpC,KAAK,qBAAqBqC,UAAWtF,IAClD,kBAAC,IAAD,CAAOqF,OAAK,EAACpC,KAAK,0BAA0BqC,UAAWrF,IACvD,kBAAC,IAAD,CAAOoF,OAAK,EAACpC,KAAK,8BAA8BqC,UAAWhC,IAC3D,kBAAC,IAAD,CAAO+B,OAAK,EAACpC,KAAK,4BAA4BqC,UAAWlB,SCV7DjL,QACW,cAA7BoM,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5J,MAAK,SAAA6J,GACjCA,EAAaC,iB","file":"static/js/main.939d7e46.chunk.js","sourcesContent":["import React from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n/* ##### */\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\nfirebase.initializeApp(firebaseConfig)\n/* ##### */\n\nconst FirebaseContext = React.createContext({\n    user: {\n        uid: \"\",\n        displayName: \"\",\n        email: \"\",\n        emailVerified: Boolean,\n        metadata: {\n            creationTime: \"\",\n            lastSignInTime: \"\"\n        },\n        photoURL: \"\",\n        phoneNumber: \"\",\n    }\n})\n\nfunction Firebase({ children }) {\n    const [user] = useAuthState(firebase.auth())\n    return (\n        <FirebaseContext.Provider value={user}>\n            {children}\n        </FirebaseContext.Provider>\n    )\n}\n\nexport { Firebase, FirebaseContext }\n","import React, { useState } from 'react'\nimport firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport { Button, Row, Form, Col, Modal, Alert, ButtonToolbar, Dropdown } from 'react-bootstrap'\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons';\n\nexport default function App() {\n    const [user] = useAuthState(firebase.auth())\n    return (\n        <span>\n            {!user && <LogIn />}\n            {user && <LogOut />}\n        </span>\n    )\n}\n\nfunction LogIn({ history }) {\n    const [error, setError] = useState(\"\")\n    const [register, setRegister] = useState({\n        email: \"\",\n        passwd: \"\",\n        lastname: \"\",\n        firstname: \"\",\n        username: \"\"\n    })\n\n    const handleChange = (e) => {\n        setRegister({\n            ...register,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const [showLogin, setShowLogin] = useState(false);\n    const [showCreate, setShowCreate] = useState(false);\n    const handleCloseLogin = () => setShowLogin(false);\n    const handleCloseCreate = () => setShowCreate(false);\n    const handleShowLogin = () => setShowLogin(true);\n    const handleShowCreate = () => {\n        setShowLogin(false)\n        setShowCreate(true)\n    };\n\n    const signInWithEmail = (event) => {\n        firebase.auth().signInWithEmailAndPassword(register.email, register.passwd)\n            .then(() => {\n                setShowLogin(false)\n                setError(\"\")\n            })\n            .catch(error => {\n                if (error.code === ERROR_CODE_ACCOUNT_NOEXISTS)\n                    setError(error.message)\n            })\n        event.preventDefault()\n    }\n\n    /* const signInAnonymous = (event) => {\n        firebase.auth().signInAnonymously()\n            .then(() => {\n                return firebase.auth().currentUser.updateProfile({\n                    displayName: \"Anonymous\"\n                });\n            })\n            .catch(error => {\n                setError(error.message)\n            })\n        event.preventDefault()\n    } */\n\n    function createNewUser(event) {\n        firebase.auth()\n            .createUserWithEmailAndPassword(register.email, register.passwd)\n            .then(authUser => {\n                // Create a user in your Firebase Realtime database\n                return firestore().collection('users').doc(authUser.user.uid)\n                    .set({\n                        email: register.email,\n                        firstname: register.firstname,\n                        lastname: register.lastname,\n                        dateCreatedAccount: firebase.firestore.Timestamp.fromDate(new Date()),\n                        username: register.username,\n                    });\n            })\n            .then(() => {\n                return firebase.auth().currentUser.sendEmailVerification({\n                    url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n                })\n            })\n            .then(() => {\n                return firebase.auth().currentUser.updateProfile({\n                    displayName: register.username,\n                });\n            })\n            .catch(error => {\n                if (error.code === ERROR_CODE_ACCOUNT_EXISTS)\n                    setError(error.message);\n            });\n        event.preventDefault();\n    };\n\n    return (\n        <span>\n            <ButtonToolbar>\n                <Button className=\"ml-1\" onClick={handleShowLogin} variant=\"link\">Se connecter</Button>\n            </ButtonToolbar>\n\n            <Modal show={showLogin} onHide={handleCloseLogin}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Connectez-vous</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={signInWithEmail}>\n                    <Modal.Body>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"2\">\n                                Identifiant\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control value={register.email} name=\"email\" onChange={handleChange} type=\"email\" />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Mot de passe\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control type=\"password\" value={register.passwd} name=\"passwd\" onChange={handleChange} />\n                            </Col>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseLogin}>\n                            Fermer\n                                </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            S'identifier\n                                </Button>\n                        {error &&\n                            <Alert variant=\"danger\">{error}</Alert>\n                        }\n                    </Modal.Footer>\n                </Form>\n                <ButtonToolbar>\n                    <Button size=\"sm\" onClick={handleShowCreate} variant=\"link\">Créer un compte</Button>\n                </ButtonToolbar>\n            </Modal>\n\n            <Modal show={showCreate} onHide={handleCloseCreate}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Créer un nouvel utilisateur</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={createNewUser}>\n                    <Modal.Body>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"2\">\n                                Email\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control type=\"email\" required value={register.email} name=\"email\" onChange={handleChange} />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Mot de passe\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control required value={register.passwd} name=\"passwd\" onChange={handleChange} type=\"password\" />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"2\">\n                                Nom\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control className=\"text-capitalize\" type=\"text\" required value={register.lastname} name=\"lastname\" onChange={handleChange} />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"2\">\n                                Prénom\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control className=\"text-capitalize\" type=\"text\" required value={register.firstname} name=\"firstname\" onChange={handleChange} />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"2\">\n                                Nom utilsateur\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control type=\"text\" required value={register.username} name=\"username\" onChange={handleChange} />\n                            </Col>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseCreate}>\n                            Annuler\n                                </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Enregistrer\n                                </Button>\n                        {error &&\n                            <Alert variant=\"danger\">{error}</Alert>\n                        }\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </span>\n    )\n}\n\nfunction LogOut() {\n    const handleClick = () => {\n        firebase.auth().signOut()\n    }\n    return (\n        <ButtonToolbar>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-custom-1\">\n                    <FontAwesomeIcon\n                        icon={faUserCog}\n                        size=\"lg\"\n                    />\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu-md-right\">\n                    <Dropdown.Item as={Link} to=\"/paroletahitienne/profile\" eventKey=\"1\">Profile</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={handleClick} eventKey=\"4\">Se Déconnecter</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </ButtonToolbar>\n    )\n}\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\nconst ERROR_CODE_ACCOUNT_NOEXISTS = \"auth/user-not-found\"","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Session from \"../Session/index\"\n\nexport default function Navigation() {\n    return (\n        <Navbar className=\"mb-1\" collapseOnSelect expand=\"lg\" bg=\"light\" >\n            <Navbar.Brand href=\"/\">Parole Tahitienne</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/paroletahitienne/\">\n                        <Nav.Link>Home</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/paroletahitienne/liste\">\n                        <Nav.Link>Liste</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Session />\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            HomePage\n        </div>\n    )\n}\n","import './style.css'\nimport React, { useState, useEffect } from 'react'\n\nimport firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { ListGroup, Alert, Spinner, Form, Modal, Button, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faPlus } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function Liste() {\n\n    const [user] = useAuthState(firebase.auth())\n\n    const [value, loading, error] = useCollection(\n        firebase.firestore().collection('paroles'),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    return (\n        <div>\n            {error && <Alert variant=\"danger\">Erreur: {error}</Alert>}\n            {loading && (\n                <Spinner animation=\"grow\" variant=\"primary\" ></Spinner>\n            )\n            }\n            {\n                value && (\n                    <div>\n                        <AjoutParole />\n                        <ListGroup variant=\"flush\">\n                            {value.docs.map((doc) => (\n                                <ListGroup.Item variant=\"light\" as={Link}\n                                    to={`/paroletahitienne/liste=${doc.id}`} key={doc.id}>\n                                    {doc.data().titre}\n                                    {user && !user.isAnonymous &&\n                                        <AjouterFavoris data={{\n                                            id: doc.id,\n                                            titre: doc.data().titre,\n                                            artiste: doc.data().artiste,\n                                            createBy: doc.data().createBy\n                                        }} uid={user.uid} />\n                                    }\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    </div>\n                )\n            }\n        </div >\n    );\n}\n\nfunction AjoutParole() {\n\n    const [user] = useAuthState(firebase.auth())\n    const [show, setShow] = useState(false);\n    const [item, setItem] = useState({\n        titre: \"\",\n        artiste: \"\",\n        parole: \"\",\n    });\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e) => {\n        setItem({\n            ...item,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n\n    };\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity()) {\n            firestore().collection('paroles').add({\n                ...item,\n                createAt: firebase.firestore.Timestamp.fromDate(new Date()),\n                uid: user ? user.uid : 'anonymous',\n                createBy: user ? user.displayName : 'anonymous'\n            }).then((ref) => {\n                if (user) {\n                    firestore().collection(`users/${user.uid}/chansons`).add({\n                        id: ref.id,\n                        createAt: firebase.firestore.Timestamp.fromDate(new Date()),\n                        titre: item.titre,\n                        artiste: item.artiste\n                    }).then(() => {\n                        setItem({\n                            titre: \"\",\n                            artiste: \"\",\n                            parole: \"\",\n                        })\n                        setValidated(false)\n                    })\n                }\n            })\n            setShow(false)\n        } else\n            setValidated(true);\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    return (\n        <div>\n            <Button variant=\"link\" onClick={handleShow}>\n                <FontAwesomeIcon className=\"mr-1\" icon={faPlus} size=\"lg\" />\n                Ajouter une chanson\n            </Button>\n\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Ajouter une nouvelle chanson</Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Modal.Body>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n                                <Form.Label>Titre</Form.Label>\n                                <Form.Control\n                                    required\n                                    name=\"titre\"\n                                    value={item.titre}\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    placeholder=\"titre parole tahitienne\"\n                                />\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n                                <Form.Label>Artiste</Form.Label>\n                                <Form.Control\n                                    required\n                                    name=\"artiste\"\n                                    value={item.artiste}\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    placeholder=\"artiste parole tahitienne\"\n                                />\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Parole</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"parole\"\n                                value={item.parole}\n                                onChange={handleChange}\n                                as=\"textarea\" rows=\"5\" />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Form.Group>\n                            <Form.Check\n                                required\n                                label=\"Agree to terms and conditions\"\n                                feedback=\"You must agree before submitting.\"\n                            />\n                        </Form.Group>\n                        <Button variant=\"secondary\" onClick={handleShow}>\n                            Annuler\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Sauvegarder\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div >\n    )\n\n}\n\nfunction AjouterFavoris({ data, uid }) {\n\n    const favsPath = `users/${uid}/favorites`\n\n    const [state, setState] = useState(false);\n    const [refFavUser, setRefFavUser] = useState('');\n\n    useEffect(() => {\n        firestore().collection(favsPath)\n            .where(\"id\", \"==\", data.id).get()\n            .then(data => {\n                if (data.size) {\n                    setState(true)\n                    setRefFavUser(data.docs[0].ref.path)\n                }\n            })\n    });\n\n    const handleFavorite = (event) => {\n        if (!state) {\n            firestore().collection(favsPath).add(data)\n            setState(true)\n        }\n        else {\n            firestore().doc(refFavUser).delete()\n            setState(false)\n            setRefFavUser('')\n        }\n        event.stopPropagation()\n        event.preventDefault()\n    }\n\n    return (\n        <FontAwesomeIcon\n            icon={faStar}\n            pull=\"right\"\n            size=\"lg\"\n            onClick={handleFavorite}\n            color={state ? 'green' : ''}\n        />\n    )\n}","import React from 'react'\nimport { useParams } from 'react-router-dom';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { useDocument } from 'react-firebase-hooks/firestore';\nimport { Alert, Spinner, Jumbotron, Container } from 'react-bootstrap';\n\nexport default function Parole() {\n    const { id } = useParams()\n    const [value, loading, error] = useDocument(\n        firebase.firestore().doc(`paroles/${id}`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    );\n    return (\n        <div>\n            {error && <Alert variant=\"danger\">Erreur: {error}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {value && (\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>{value.data().titre}</h1>\n                        <pre>\n                            {value.data().parole}\n                        </pre>\n                    </Container>\n                </Jumbotron>\n            )}\n        </div>\n    )\n}","import React from 'react'\nimport firebase, { firestore } from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport { Card, Alert, Spinner, Row, Col, Image, Nav, Tab, CardColumns } from 'react-bootstrap';\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore'\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic, faListOl, faStar, faUser, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default function App() {\n    const [user, initialising, error] = useAuthState(firebase.auth());\n    return (\n        <div>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {initialising && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {user && (\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"third\">\n                    <Row>\n                        <Col md={3}>\n                            <Nav variant=\"tabs\" className=\"flex-md-column mb-1\">\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"first\">\n                                        <FontAwesomeIcon icon={faMusic} />\n                                        <FontAwesomeIcon icon={faListOl} />\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"second\">\n                                        <FontAwesomeIcon icon={faStar} />\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"third\">\n                                        <FontAwesomeIcon icon={faUser} />\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col md={9}>\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"third\">\n                                    <Profile uid={user.uid} />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"first\">\n                                    <Chansons uid={user.uid} />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"second\">\n                                    <Favoris uid={user.uid} />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Tab.Container>\n            )}\n            {!user && <p>Pas de profile pour vous xD. Veuillez créer un compte!</p>}\n        </div>\n    )\n\n}\n\nfunction Profile({ uid }) {\n    const [value, loading, error] = useDocument(firestore().doc(`users/${uid}`));\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Profile</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <Card border=\"light\" className=\"text-center\">\n                    <Row>\n                        <Col></Col>\n                        <Col>\n                            <Image src=\"https://via.placeholder.com/300\" roundedCircle />\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                    <Card.Body>\n                        <Card.Title>{value.data().lastname} {value.data().firstname}</Card.Title>\n                        <Card.Text>\n                            Nom utilisateur: {value.data().username}\n                        </Card.Text>\n                        <Card.Text>\n                            Créer le: {value.data().dateCreatedAccount.toDate().toString()}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            )}\n        </div>\n    )\n}\n\nfunction Favoris({ uid }) {\n\n    const [value, loading, error] = useCollection(\n        firestore().collection(`users/${uid}/favorites`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    const handleDelete = (ref, event) => {\n        firestore().doc(ref).delete()\n        event.preventDefault()\n    }\n\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Favoris</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <CardColumns>\n                    {value.docs.map((doc, i) => (\n                        <Card key={doc.id} border=\"dark\">\n                            <Card.Header>\n                                {i + 1}\n                                <FontAwesomeIcon\n                                    icon={faTrashAlt}\n                                    pull=\"right\"\n                                    size=\"lg\"\n                                    onClick={e => handleDelete(doc.ref.path, e)}\n                                    color='red'\n                                />\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>{doc.data().titre}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    Artiste: {doc.data().artiste}\n                                </Card.Subtitle>\n                                <footer className=\"blockquote-footer\">\n                                    Ajoutée par <cite title={doc.data().createBy}>{doc.data().createBy}</cite>\n                                </footer>\n                                <Card.Link as={Link} to={`/paroletahitienne/liste=${doc.data().id}`}>\n                                    Consulter\n                                </Card.Link>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n            )}\n        </div>\n    )\n}\n\nfunction Chansons({ uid }) {\n\n    const [value, loading, error] = useCollection(\n        firestore().collection(`users/${uid}/chansons`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Chansons</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {!error && <Alert variant=\"info\">La liste des chansons que vous avez contribuées à ajouter!</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <CardColumns>\n                    {value.docs.map((doc, i) => (\n                        <Card key={doc.id} border=\"success\">\n                            <Card.Header>\n                                {i + 1}\n                                {/* <FontAwesomeIcon\n                                    icon={faTrashAlt}\n                                    pull=\"right\"\n                                    size=\"lg\"\n                                    onClick={e => handleDelete(doc.ref.path, e)}\n                                    color='red'\n                                /> */}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>{doc.data().titre}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    Artiste: {doc.data().artiste}\n                                </Card.Subtitle>\n                                <footer className=\"blockquote-footer\">\n                                    Ajoutée le <cite title={doc.data().createAt.toDate().toString()}>{doc.data().createAt.toDate().toString()}</cite>\n                                </footer>\n                                <Card.Link as={Link} to={`/paroletahitienne/liste=${doc.data().id}`}>\n                                    Consulter\n                                </Card.Link>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n            )}\n        </div>\n    )\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { Firebase } from \"../Firebase/index\"\nimport Navigation from \"../Navigation/index\";\nimport Home from \"../Home/index\"\nimport Liste from \"../Liste/index\"\nimport Parole from \"../Parole/index\"\nimport Profile from \"../Profile/index\"\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Firebase>\n                <Navigation />\n                <div className=\"container\">\n                    <Switch>\n                        <Route exact path=\"/paroletahitienne/\" component={Home} />\n                        <Route exact path=\"/paroletahitienne/liste\" component={Liste} />\n                        <Route exact path=\"/paroletahitienne/liste=:id\" component={Parole} />\n                        <Route exact path=\"/paroletahitienne/profile\" component={Profile} />\n                    </Switch>\n                </div>\n            </Firebase>\n        </BrowserRouter>\n    )\n};\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}