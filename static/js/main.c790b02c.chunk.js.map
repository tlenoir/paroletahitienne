{"version":3,"sources":["stores/Firebase/firebase.jsx","components/Liste/index.jsx","components/CGU/index.jsx","components/Profile/profile.jsx","components/Profile/favoris.jsx","components/Profile/chansons.jsx","components/Profile/index.jsx","constants/routes.jsx","components/Accueil/index.jsx","components/Apropos/index.jsx","components/Parole/index.jsx","components/Session/signUp.jsx","components/Session/signIn.jsx","components/No404/index.jsx","stores/Themes/themes.jsx","stores/Authentication/index.jsx","components/Session/session.jsx","components/Session/index.jsx","components/Navigation/index.jsx","serviceWorker.js","index.js","components/App/index.jsx"],"names":["initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","React","createContext","storage","auth","database","firestore","useDocument","useCollection","user","currentUser","addParole","data","Promise","editParole","doSignUpWithEmailAndPasswd","doSignInWithEmailAndPasswd","doSignInWithFacebook","doSignInWithGoogle","Firebase","children","useAuthState","firebase","resolve","reject","collection","add","then","reference","catch","e","doc","id","user_","displayName","runTransaction","tr","a","async","get","paroles","String","utilisateur","ajout_par","update","edit","editBy","date_edit","editee_par","where","utilsateur","usernames","size","createUserWithEmailAndPassword","email","passwd","authUser","uid","set","sendEmailVerification","url","updateProfile","message","signInWithEmailAndPassword","signInWithPopup","FacebookAuthProvider","avatar","photoURL","date_creation","metadata","creationTime","prenom","additionalUserInfo","profile","first_name","nom","last_name","GoogleAuthProvider","console","log","given_name","family_name","Provider","value","initialState","orderBy","reducer","state","action","type","AjoutParole","useContext","useState","validated","setValidated","submit","setSubmit","show","setShow","artistes","titre","groupes","item","setItem","handleClose","handleChange","target","name","useEffect","Fragment","Button","onClick","variant","className","icon","faPlus","Modal","onHide","Header","closeButton","Title","Form","noValidate","onSubmit","currentTarget","checkValidity","date_ajout","moment","local","format","length","split","preventDefault","Body","Row","Group","as","Col","md","controlId","Label","Control","readOnly","required","onChange","placeholder","rows","Footer","ButtonGroup","disabled","Link","to","Cgu","Profile","snapshotListenOptions","includeMetadataChanges","loading","error","Card","body","Alert","Spinner","animation","border","Image","src","roundedCircle","Text","Subtitle","apropos","Favoris","CardColumns","docs","map","i","key","faTrashAlt","pull","ref","path","event","delete","color","artiste","title","createBy","Chansons","handleDelete","NotificationBadge","Nav","eventKey","faBell","Badge","NotificationContent","parole","component","exact","history","useHistory","useReducer","dispatch","Table","striped","responsive","hover","push","groupe","routesParams","useParams","submitting","setSubmitting","undefined","exists","Jumbotron","srOnly","plaintext","TextareaAutosize","setError","ville","date_naissance","register","setRegister","Timestamp","fromDate","Date","Check","label","role","aria-hidden","scrollable","faFacebookF","faGoogle","Tab","Container","defaultActiveKey","Item","faMusic","faListOl","faStar","faUser","Content","Pane","text","ThemesContext","themes","button_submit","button_link","button_close","bg","updateThemes","Themes","location","useLocation","str","name_location","pathname","slice","document","charAt","toUpperCase","Authentization","notUser","useRouteMatch","NotUser","User","Dropdown","Toggle","faUserCog","Menu","Divider","signOut","Session","Navigation","Navbar","collapseOnSelect","expand","Brand","href","aria-controls","Collapse","routes","route","Boolean","window","hostname","match","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c790b02c.chunk.js","sourcesContent":["import React from 'react'\nimport { firestore, database, storage, auth, initializeApp } from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore'\n/* ##### */\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\ninitializeApp(firebaseConfig)\n/* ##### */\n\nconst FirebaseContext = React.createContext({\n    storage,\n    auth,\n    database,\n    firestore,\n    useDocument,\n    useCollection,\n    user: auth().currentUser,\n    addParole: (data) => { return new Promise() },\n    editParole: (data) => { return new Promise() },\n    doSignUpWithEmailAndPasswd: (data) => { return new Promise() },\n    doSignInWithEmailAndPasswd: (data) => { return new Promise() },\n    doSignInWithFacebook: () => { },\n    doSignInWithGoogle: () => { },\n\n})\n\nfunction Firebase({ children }) {\n\n    const [user] = useAuthState(auth())\n\n    const doSignUpWithEmailAndPasswd = (data) => {\n        return new Promise((resolve, reject) => {\n            firestore().collection('utilisateurs')\n                .where(\"utilsateur\", \"==\", data.utilsateur).get()\n                .then((usernames) => {\n                    if (usernames.size === 0) {\n                        auth().createUserWithEmailAndPassword(data.email, data.passwd)\n                            .then((authUser) => {\n                                return firestore().collection('utilisateurs')\n                                    .doc(authUser.user.uid)\n                                    .set({ ...data, passwd: '' })\n                            })\n                            .then(() => {\n                                return auth().currentUser.sendEmailVerification({\n                                    url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n                                })\n                            })\n                            .then(() => {\n                                auth().currentUser.updateProfile({\n                                    displayName: data.utilsateur,\n                                })\n                                resolve(auth().currentUser)\n                            })\n                            .catch(e => { reject(e) })\n                    } else {\n                        reject({ message: \"Ce nom d'utilisateur est déjà utilisé!\" })\n                    }\n                })\n        })\n    }\n\n    const doSignInWithGoogle = () =>\n        auth().signInWithPopup(new auth.GoogleAuthProvider())\n            .then((authUser) => {\n                console.log(authUser)\n                firestore().collection('utilisateurs').doc(authUser.user.uid)\n                    .set({\n                        utilisateur: authUser.user.displayName,\n                        avatar: authUser.user.photoURL,\n                        email: authUser.user.email,\n                        date_creation: authUser.user.metadata.creationTime,\n                        prenom: authUser.additionalUserInfo.profile.given_name,\n                        nom: authUser.additionalUserInfo.profile.family_name\n                    })\n            })\n\n    const doSignInWithFacebook = () =>\n        auth().signInWithPopup(new auth.FacebookAuthProvider())\n            .then((authUser) => {\n                firestore().collection('utilisateurs').doc(authUser.user.uid)\n                    .set({\n                        utilisateur: authUser.user.displayName,\n                        avatar: authUser.user.photoURL+ \"?type=large\",\n                        email: authUser.user.email,\n                        date_creation: authUser.user.metadata.creationTime,\n                        prenom: authUser.additionalUserInfo.profile.first_name,\n                        nom: authUser.additionalUserInfo.profile.last_name\n                    })\n            })\n\n    const doSignInWithEmailAndPasswd = (data) => {\n        return new Promise((resolve, reject) => {\n            auth().signInWithEmailAndPassword(data.email, data.passwd)\n                .then((auth) => { resolve(auth) })\n                .catch(e => { reject(e) })\n        })\n    }\n\n    const addParole = (data) => {\n        return new Promise((resolve, reject) => {\n            firestore().collection('chansons').add({ ...data })\n                .then(reference => {\n                    resolve(reference)\n                })\n                .catch(e => { reject(e) })\n        })\n    }\n\n    const editParole = (data) => {\n        return new Promise((resolve, reject) => {\n            const reference = firestore().doc(`paroles/${data.id}`)\n            const user_ = user ? user.displayName : 'anonymous'\n            firestore().runTransaction(async (tr) => {\n                const doc = await tr.get(reference)\n                const paroles = String(doc.data().paroles)\n                const utilisateur = String(doc.data().ajout_par)\n                tr.update(reference, {\n                    paroles: data.edit,\n                    editBy: user_,\n                    date_edit: data.date_edit\n                })\n                firestore().collection(`notifications/${utilisateur}/chansons`).add({\n                    paroles: [paroles, data.edit],\n                    reference,\n                    editee_par: user_\n                })\n            })\n        })\n    }\n\n    const firebase = {\n        storage,\n        auth,\n        database,\n        firestore,\n        useDocument,\n        useCollection,\n        user,\n        addParole,\n        editParole,\n        doSignUpWithEmailAndPasswd,\n        doSignInWithEmailAndPasswd,\n        doSignInWithFacebook,\n        doSignInWithGoogle\n    }\n\n    return (\n        <FirebaseContext.Provider value={firebase}>\n            {children}\n        </FirebaseContext.Provider>\n    )\n}\n\nexport { Firebase, FirebaseContext }\n","import React, { useContext, useState, useReducer, useEffect } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\n\nimport { Link, useHistory } from 'react-router-dom'\nimport { Spinner, Alert, Button, Modal, Form, Col, ButtonGroup, Table } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nconst initialState = {orderBy: 'titre'}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'artiste':\n      return {orderBy: 'artistes'}\n    case 'groupe':\n      return {orderBy: 'groupes'}\n    case 'date':\n        return {orderBy: 'date_ajout'}\n    case 'titre':\n        return {orderBy: 'titre'}\n    default:\n      return state\n  }\n}\n\nexport default function Liste() {\n    const firebase = useContext(FirebaseContext)\n    const history = useHistory()\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const [docs, loading, error] = firebase.useCollection(\n        firebase.firestore().collection('chansons').orderBy(state.orderBy),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true }\n        }\n    )\n\n    const handleClick = (event, id) => {\n        history.push(`/liste=${id}`)\n        event.preventDefault()\n    }\n\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {docs && (\n                <React.Fragment>\n                    <AjoutParole />\n                    <Table striped responsive hover>\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th onClick={() => dispatch({type: 'titre'})}>Titre</th>\n                        <th onClick={() => dispatch({type: 'artiste'})}>Artiste</th>\n                        <th onClick={() => dispatch({type: 'groupe'})}>Groupe</th>\n                        <th onClick={() => dispatch({type: 'date'})}>Date d'ajout</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {docs.docs.map((doc, i) => (\n                        <tr key={doc.id} onClick={(e) => handleClick(e, doc.id)}>\n                            <td>{i+1}</td>\n                            <td>{doc.data().titre}</td>\n                            <td>{doc.data().artistes.map(artiste => (\n                                <span>{artiste} </span>\n                            ))}</td>\n                            <td>{doc.data().groupes.map(groupe => (\n                                <span>{groupe} </span>\n                            ))}</td>\n                            <td>{doc.data().date_ajout}</td>\n                        </tr>\n                        ))}\n                    </tbody>\n                    </Table>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    )\n}\n\nfunction AjoutParole() {\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n\n    const [validated, setValidated] = useState(false)\n    const [submit, setSubmit] = useState(false)\n    const [show, setShow] = useState(false)\n    const [item, setItem] = useState({\n        paroles: '',\n        artistes: '',\n        titre: '',\n        groupes: '',\n    })\n\n    const handleOpen = () => setShow(true)\n    const handleClose = () => setShow(false)\n    const handleChange = (e) => setItem({ ...item, [e.target.name]: e.target.value })\n\n    const handleSubmit = (e) => {\n        const form = e.currentTarget\n\n        if (form.checkValidity()) {\n            setItem({\n                ...item,\n                date_ajout: moment().local('fr').format('LLL'),\n                ajout_par: user ? user.displayName : 'anonymous',\n                uid: user ? user.uid : 'anonymous',\n                artistes: item.artistes.length > 0 ? item.artistes.split('') : [''],\n                groupes: item.groupes.length > 0 ? item.groupes.split('') : ['']\n            })\n            setSubmit(true)\n        }\n        setValidated(true)\n        e.preventDefault()\n    }\n\n    useEffect(() => {\n        if (submit) {\n            firebase.addParole(item)\n                .then(() => {\n                    setShow(false)\n                    setItem({\n                        paroles: '',\n                        artistes: '',\n                        titre: '',\n                        groupes: '',\n                    })\n                })\n                .then(() => {\n                    setSubmit(false)\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [submit])\n\n    return (\n        <React.Fragment>\n            <Button onClick={handleOpen} variant=\"link\">\n                <FontAwesomeIcon className=\"mr-1\" icon={faPlus} />\n                Ajouter une chanson\n            </Button>\n\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Ajouter une Chanson</Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n\n                    <Modal.Body>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"6\" controlId=\"formGridTiltle\">\n                                <Form.Label>Titre</Form.Label>\n                                <Form.Control\n                                    readOnly={submit} \n                                    required\n                                    value={item.titre}\n                                    name='titre'\n                                    onChange={handleChange}\n                                    type=\"text\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} md=\"6\" controlId=\"formGridArtiste\">\n                                <Form.Label>Artiste</Form.Label>\n                                <Form.Control\n                                    readOnly={submit}\n                                    value={item.artistes}\n                                    name='artistes'\n                                    onChange={handleChange}\n                                    type=\"text\" placeholder=\"art1art2\" />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group controlId=\"formGridGroup\">\n                            <Form.Label>Groupe</Form.Label>\n                            <Form.Control\n                                readOnly={submit}\n                                value={item.groupes}\n                                name='groupes'\n                                onChange={handleChange}\n                                type=\"text\" placeholder=\"grp1grp2\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"exampleForm.Control\n                        readOnly={submit}Parole\">\n                            <Form.Label>Parole</Form.Label>\n                            <Form.Control\n                                readOnly={submit}\n                                value={item.paroles}\n                                name='paroles'\n                                onChange={handleChange}\n                                as=\"textarea\" rows=\"6\" />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <ButtonGroup>\n                            <Button \n                                disabled={submit}\n                                size=\"sm\" as={Link}\n                                to='/' variant=\"link\" onClick={handleClose}>\n                                création/avancée\n                            </Button>\n                            <Button \n                                disabled={submit}\n                                variant=\"outline-secondary\" onClick={handleClose}>\n                                Fermer\n                            </Button>\n                            <Button \n                                disabled={submit}\n                                variant=\"primary\" type=\"submit\">\n                                Enregistrer\n                            </Button>\n                        </ButtonGroup>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\n\nexport default function Cgu() {\n    return (\n        <React.Fragment>\n            <h2>Conditions d'utilisation</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro veniam quis dolorem ipsa sapiente ex, hic obcaecati ducimus culpa. Doloribus itaque ducimus temporibus impedit tempora, totam, qui aspernatur nihil rem atque assumenda officiis officia ad sunt deserunt doloremque optio in quibusdam quaerat? Optio minus fugit id consequuntur blanditiis voluptates necessitatibus. Praesentium totam ut eos sint pariatur fugiat nulla nam perspiciatis velit! Illo explicabo aut, veniam veritatis quia sit accusamus. Fugit, dicta earum quibusdam ex quia quod esse aut distinctio saepe dolor sunt itaque facere ut quasi alias velit odio repellendus molestiae voluptatem suscipit. Atque in, repellendus dolore ea beatae impedit rem eum hic sit aspernatur saepe laboriosam facilis suscipit odio, dolores similique provident, molestiae neque enim doloremque recusandae cumque id.</p>\n        </React.Fragment>\n    )\n}","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\n\nimport { Card, Alert, Spinner, Image } from 'react-bootstrap'\n\n\nexport default function Profile({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n    const [value, loading, error] = firebase.useDocument(\n        firebase.firestore().doc(`utilisateurs/${uid}`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    return (\n        <React.Fragment>\n            <Card className=\"mb-3\" body>Profile</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <Card border=\"light\" className=\"text-center\">\n                    <Image className=\"mx-auto w-25\" src={value.data().avatar ? value.data().avatar : \"https://via.placeholder.com/150\"} roundedCircle />\n                    <Card.Body>\n                        <Card.Title>{value.data().nom} {value.data().prenom}</Card.Title>\n                        <Card.Text>\n                            Nom utilisateur: {value.data().utilisateur}\n                        </Card.Text>\n                        <Card.Subtitle className=\"mb-1 text-muted\">{value.data().apropos}</Card.Subtitle>\n                        <Card.Text>\n                            Membre depuis le: {value.data().date_creation}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            )}\n        </React.Fragment>\n    )\n}","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\n\nimport { Card, Alert, Spinner, CardColumns } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Favoris({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value, loading, error] = firebase.useCollection(\n        firebase.firestore().collection(`favoris/${uid}/all`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    const handleDelete = (ref, event) => {\n        firebase.firestore().doc(ref).delete()\n        event.preventDefault()\n    }\n\n    return (\n        <React.Fragment>\n            <Card className=\"mb-3\" body>Favoris</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <CardColumns>\n                    {value.docs.map((doc, i) => (\n                        <Card key={doc.id} border=\"dark\">\n                            <Card.Header>\n                                {i + 1}\n                                <FontAwesomeIcon\n                                    icon={faTrashAlt}\n                                    pull=\"right\"\n                                    size=\"lg\"\n                                    onClick={e => handleDelete(doc.ref.path, e)}\n                                    color='red'\n                                />\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>{doc.data().titre}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    Artiste: {doc.data().artiste}\n                                </Card.Subtitle>\n                                <footer className=\"blockquote-footer\">\n                                    Ajoutée par <cite title={doc.data().ajout_par}>{doc.data().createBy}</cite>\n                                </footer>\n                                <Card.Link as={Link} to={`/liste=${doc.data().id}`}>\n                                    Consulter\n                                </Card.Link>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n            )}\n        </React.Fragment>\n    )\n}","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\n\nimport { Card, Alert, Spinner, CardColumns } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Chansons({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value, loading, error] = firebase.useCollection(\n        firebase.firestore().collection('chansons').where(\"uid\", \"==\", uid),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    const handleDelete = (doc, event) => {\n        firebase.firestore().doc(`paroles/${doc.data().id}`).delete()\n        firebase.firestore().doc(doc.ref.path).delete()\n        event.preventDefault()\n    }\n\n    return (\n        <React.Fragment>\n            <Card className=\"mb-3\" body>Chansons</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {!error && <Alert variant=\"info\">La liste des chansons que vous avez contribuées à ajouter!</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <CardColumns>\n                    {value.docs.map((doc, i) => (\n                        <Card key={doc.id} border=\"success\">\n                            <Card.Header>\n                                {i + 1}\n                                <FontAwesomeIcon\n                                    icon={faTrashAlt}\n                                    pull=\"right\"\n                                    size=\"lg\"\n                                    onClick={e => handleDelete(doc, e)}\n                                    color='red'\n                                />\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    {doc.data().titre}\n                                </Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    Artiste: {doc.data().artistes}\n                                </Card.Subtitle>\n                                <footer className=\"blockquote-footer\">\n                                    Ajoutée le <cite title={doc.data().date_ajout}>{doc.data().date_ajout}</cite>\n                                </footer>\n                                <Card.Link as={Link} to={`/liste=${doc.id}`}>\n                                    Consulter\n                                </Card.Link>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n            )}\n        </React.Fragment>\n    )\n}","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\nimport Profile from \"./profile\"\nimport Favoris from \"./favoris\"\nimport Chansons from \"./chansons\"\n\nimport { Card, Alert, Row, Col, Nav, Tab, Badge } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMusic, faListOl, faStar, faUser, faBell } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function Profiles() {\n\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n    return (\n        <React.Fragment>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"third\">\n                <Row>\n                    <Col md={3}>\n                        <Nav variant=\"tabs\" className=\"flex-md-column mb-1\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"first\">\n                                    <FontAwesomeIcon icon={faMusic} />\n                                    <FontAwesomeIcon icon={faListOl} />\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"second\">\n                                    <FontAwesomeIcon icon={faStar} />\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <NotificationBadge uid={user.uid} />\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"third\">\n                                    <FontAwesomeIcon icon={faUser} />\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                    <Col md={9}>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"third\">\n                                <Profile uid={user.uid} />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"first\">\n                                <Chansons uid={user.uid} />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"second\">\n                                <Favoris uid={user.uid} />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"four\">\n                                <NotificationContent uid={user.uid} />\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        </React.Fragment>\n    )\n\n}\n\nfunction NotificationBadge({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value] = firebase.useCollection(\n        firebase.firestore().collection(`notifications/${uid}/chansons`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    return (\n        <Nav.Link eventKey=\"four\">\n            <FontAwesomeIcon icon={faBell} />\n            {value && value.size > 0 &&\n                <Badge className=\"float-right\" variant=\"info\">{value.size}</Badge>\n            }\n        </Nav.Link>\n    )\n}\n\nfunction NotificationContent({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value] = firebase.useCollection(\n        firebase.firestore().collection(`notifications/${uid}/chansons`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Notifications</Card>\n            {value && value.size > 0 && <div>\n                <Alert variant=\"info\">Chansons Re-editées {value.size}</Alert>\n                {value.docs.map((doc) => (\n                    <Row key={doc.id}>\n                        <Col md={6}>\n                            <pre>{doc.data().parole[0]}</pre>\n                        </Col>\n                        <Col md={6}>\n                            <pre>{doc.data().parole[1]}</pre>\n                        </Col>\n                    </Row>\n                ))}\n            </div>}\n        </div>\n    )\n}\n","import Accueil from '../components/Accueil/index'\nimport Apropos from '../components/Apropos/index'\nimport Liste from '../components/Liste/index'\nimport Parole from '../components/Parole/index'\nimport SignUp from '../components/Session/signUp'\nimport SignIn from '../components/Session/signIn'\nimport Profile from '../components/Profile/index'\nimport No404 from '../components/No404/index'\n\nexport default [\n    {\n        path: \"/\",\n        component: Accueil,\n        exact: true,\n        name: 'Accueil'\n    },\n    {\n        path: \"/apropos\",\n        component: Apropos,\n        exact: true,\n        name: 'À propos'\n    },\n    {\n        path: \"/liste\",\n        component: Liste,\n        exact: true,\n        name: 'Liste'\n    },\n]\n\nexport const routesParams = [\n    {\n        path: \"/liste=:id\",\n        component: Parole,\n        exact: true,\n    }, \n    {\n        path: \"/signup\",\n        component: SignUp,\n        exact: true,\n    },\n    {\n        path: \"/signin\",\n        component: SignIn,\n        exact: true,\n    },\n    {\n        path: \"/profile\",\n        component: Profile,\n        exact: true,\n    },\n    {\n        path: \"*\",\n        component: No404,\n    },\n]","import React from 'react'\n\nexport default function Accueil() {\n    return (\n        <div>\n            Accueil page.\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Apropos() {\n    return (\n        <div>\n            À propos page.\n        </div>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase\"\nimport { useParams } from 'react-router-dom'\nimport { Spinner, Jumbotron, Button, Alert, Form } from 'react-bootstrap'\nimport TextareaAutosize from 'react-textarea-autosize'\n\nexport default function Parole() {\n    const firebase = useContext(FirebaseContext)\n    const { id } = useParams()\n    const [submitting, setSubmitting] = useState(true)\n    const [item, setItem] = useState({\n        paroles: '',\n        titre: ''\n    })\n\n    const [doc, loading, error] = firebase.useDocument(\n        firebase.firestore().doc(`chansons/${id}`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    const handleEdit = (event) => {\n        setSubmitting(false)\n        event.preventDefault()\n    }\n\n    const handleChange = (event) => {\n        setItem({\n            ...item,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        if (doc !== undefined && doc.exists)\n            setItem({\n                titre: doc.data().titre,\n                paroles: doc.data().paroles\n            })\n        else\n            setItem({\n                titre: \"Ce document n'existe pas.\"\n            })\n    }, [doc])\n\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\" />}\n            {doc &&\n                <Jumbotron>\n                    <Button disabled={!doc.exists}\n                        variant=\"link\" size=\"sm\"\n                        onClick={handleEdit}>\n                        edité\n                    </Button>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInputTitre\">\n                            <Form.Label srOnly={submitting}>Titre</Form.Label>\n                            <Form.Control\n                                size=\"lg\"\n                                value={item.titre}\n                                name=\"titre\"\n                                plaintext={submitting}\n                                required\n                                onChange={handleChange}\n                                readOnly={submitting} type=\"text\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlTextareaParole\">\n                            <Form.Label srOnly={submitting}>Parole</Form.Label>\n                            <Form.Control\n                                value={item.paroles}\n                                name=\"paroles\"\n                                plaintext={submitting}\n                                required\n                                onChange={handleChange}\n                                readOnly={submitting} as={TextareaAutosize} />\n                        </Form.Group>\n                    </Form>\n                </Jumbotron>\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\nimport CGU from \"../CGU/index\"\n\nimport { Form, Button, Col, Alert, Spinner, Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nexport default function SignUp() {\n\n    const firebase = useContext(FirebaseContext)\n\n    const history = useHistory()\n\n    const [validated, setValidated] = useState(false);\n    const [submit, setSubmit] = useState(false)\n    const [error, setError] = useState(\"\")\n    const [show, setShow] = useState(false)\n    const [register, setRegister] = useState({\n        email: \"\",\n        passwd: \"\",\n        nom: \"\",\n        prenom: \"\",\n        utilsateur: \"\",\n        ville: \"\",\n        apropos: \"\",\n        date_naissance: \"\",\n    })\n\n\n    const handleShowCondition = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    const handleChange = (event) => {\n        setRegister({\n            ...register,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity()) {\n            setRegister({\n                ...register,\n                date_creation: firebase.firestore.Timestamp.fromDate(new Date()),\n                date_naissance: moment(register.date_naissance).local('fr').format(\"LL\")\n            })\n            setSubmit(true)\n        }\n        setValidated(true);\n        event.preventDefault();\n    }\n\n    useEffect(() => {\n        if (submit) {\n            firebase.doSignUpWithEmailAndPasswd(register)\n                .then(() => {\n                    setRegister({\n                        email: \"\",\n                        passwd: \"\",\n                        nom: \"\",\n                        prenom: \"\",\n                        utilsateur: \"\",\n                        ville: \"\",\n                        apropos: \"\",\n                        date_naissance: \"\",\n                    })\n                    setValidated(false)\n                })\n                .then(() => {\n                    history.push('/')\n                })\n                .catch(e => {\n                    setError(e.message)\n                    setSubmit(false)\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [submit])\n\n    return (\n        <Form className=\"mb-4\" noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control required name=\"email\"\n                        value={register.email} onChange={handleChange}\n                        type=\"email\" placeholder=\"parole@tahitienne.com\" />\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridMotdepasse\">\n                    <Form.Label>Mot de passe</Form.Label>\n                    <Form.Control required name=\"passwd\"\n                        value={register.passwd} onChange={handleChange}\n                        type=\"password\" />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} md=\"4\" controlId=\"formGridNom\">\n                    <Form.Label>Nom</Form.Label>\n                    <Form.Control required name=\"nom\"\n                        value={register.nom} onChange={handleChange}\n                        type=\"text\" placeholder=\"Parole\"\n                    />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"formGridPrenom\">\n                    <Form.Label>Prénom</Form.Label>\n                    <Form.Control required name=\"prenom\"\n                        value={register.prenom} onChange={handleChange}\n                        type=\"text\" placeholder=\"Tahitienne\"\n                    />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"formGridNaissance\">\n                    <Form.Label>Date de naisssance</Form.Label>\n                    <Form.Control required name=\"date_naissance\"\n                        value={register.date_naissance} onChange={handleChange}\n                        type=\"date\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <hr />\n\n            <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridUtilisateur\">\n                    <Form.Label>Nom utilisateur</Form.Label>\n                    <Form.Control required name=\"utilsateur\"\n                        type=\"text\"\n                        value={register.utilsateur} onChange={handleChange}\n                    />\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridville\">\n                    <Form.Label>Ville</Form.Label>\n                    <Form.Control required name=\"ville\"\n                        value={register.ville} onChange={handleChange}\n                        type=\"text\" placeholder=\"Paea\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <hr />\n\n            <Form.Row>\n            </Form.Row>\n\n            <Form.Group as={Col} controlId=\"formGridApropos\">\n                <Form.Label>À propos</Form.Label>\n                <Form.Control\n                    name=\"apropos\"\n                    as=\"textarea\"\n                    value={register.apropos} onChange={handleChange}\n                />\n            </Form.Group>\n\n            <Form.Group id=\"formGridCheckbox\">\n                <Button variant=\"link\"\n                    onClick={handleShowCondition} size=\"sm\">\n                    conditions d'utilisation\n                </Button>\n                <Form.Check required className=\"text-left\" type=\"checkbox\" label=\"J'accepte\" />\n            </Form.Group>\n\n            <Button variant={submit ? 'link' : 'primary'} type=\"submit\" disabled={submit}>\n                {submit ? <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                /> : 'Inscription'}\n            </Button>\n            {error && <Alert className=\"mt-2\" variant=\"danger\">{error}</Alert>}\n\n            <Modal scrollable show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Parole Héritage</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <CGU />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Form>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase\"\nimport { Button, Card, Form, Alert, } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGoogle, faFacebookF } from '@fortawesome/free-brands-svg-icons'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function SignIn() {\n    const firebase = useContext(FirebaseContext)\n    const history = useHistory()\n    const [validated, setValidated] = useState(false)\n    const [error, setError] = useState('')\n    const [submitting, setSubmitting] = useState(false)\n    const [register, setRegister] = useState({\n        email: '',\n        passwd: ''\n    })\n\n    const handleChange = (event) => {\n        setRegister({\n            ...register,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget\n        if (form.checkValidity()) {\n            setSubmitting(true)\n            firebase.doSignInWithEmailAndPasswd(register)\n                .then(() => {\n                    setRegister({ email: '', passwd: '' })\n                })\n                .then(() => {\n                    history.push('/')\n                })\n                .catch(e => {\n                    setError(e.message)\n                    setSubmitting(false)\n                })\n        }\n        setValidated(true)\n        event.preventDefault()\n    }\n\n    const handleFacebook = () => {\n        firebase.doSignInWithFacebook()\n    }\n\n    const handleGoogle = () => {\n        firebase.doSignInWithGoogle()\n    }\n\n    return (\n        <React.Fragment>\n            <Card>\n                <Card.Header>\n                    <Card.Title>\n                        Connectez-vous via\n                        <FontAwesomeIcon className=\"ml-2\"\n                            onClick={handleFacebook}\n                            icon={faFacebookF} color=\"#3b5998\" />\n                        <FontAwesomeIcon className=\"ml-2\"\n                            onClick={handleGoogle}\n                            icon={faGoogle} color=\"#DD4B39\" />\n                    </Card.Title>\n                </Card.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit} >\n                    <Card.Body>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email/Identifiant</Form.Label>\n                            <Form.Control required type=\"email\" readOnly={submitting}\n                                value={register.email} name=\"email\" onChange={handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required type=\"password\" readOnly={submitting}\n                                value={register.passwd} name=\"passwd\" onChange={handleChange} />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button as={Link} to=\"/signup\"\n                            variant=\"link\"\n                            disabled={submitting}>\n                            créer un compte\n                        </Button>\n                        <Button variant=\"primary\"\n                            type=\"submit\"\n                            disabled={submitting}>\n                            S'identifier\n                        </Button>\n                        {error &&\n                            <Alert variant=\"danger\">{error}</Alert>\n                        }\n                    </Card.Footer>\n                </Form>\n            </Card>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nexport default function No404() {\n    return <Card text=\"info\" border=\"info\" body>\n        Cette page n'est pas disponible.\n        </Card>\n}\n","import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst ThemesContext = React.createContext({\n    themes: {\n        button_submit: \"\",\n        button_link: \"\",\n        button_close: \"\",\n        bg: \"\",\n        color: \"\"\n    },\n    updateThemes: () => { }\n})\n\nfunction Themes({ children }) {\n    const [themes, updateThemes] = useState({\n        button_submit: \"primary\",\n        button_link: \"link\",\n        button_close: \"secondary\",\n        bg: \"light\",\n        color: \"red\"\n    })\n\n    const location = useLocation()\n\n    const capitalize = (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    useEffect(() => {\n        const name_location = location.pathname.slice(1)\n        if (name_location.length > 0)\n            document.title = capitalize(name_location)\n        else\n            document.title = 'Parole Héritage'\n    }, [location])\n\n\n    return (\n        <ThemesContext.Provider value={{ themes, updateThemes }} >\n            {children}\n        </ThemesContext.Provider>\n    )\n}\n\nexport { ThemesContext, Themes }","import React, { useContext } from 'react'\nimport { useRouteMatch, Redirect } from 'react-router-dom'\nimport { FirebaseContext } from \"../Firebase/index\"\n\nexport default function Authentization({ children }) {\n    const firebase = useContext(FirebaseContext)\n    const notUser = useRouteMatch(['/profile'])\n    const user = useRouteMatch(['/signin', '/signup'])\n\n    return !firebase.user && notUser ?\n        <Redirect to='/signin' />\n        :\n        firebase.user && user ?\n            <Redirect to='/' />\n            :\n            <React.Fragment>\n                {children}\n            </React.Fragment>\n}\n","import React, { useContext, useState } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase\"\nimport { Button, Modal, Form, Dropdown, Alert, } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGoogle, faFacebookF } from '@fortawesome/free-brands-svg-icons'\nimport { Link } from 'react-router-dom'\n\nfunction NotUser() {\n    const firebase = useContext(FirebaseContext)\n    const [show, setShow] = useState(false)\n    const [validated, setValidated] = useState(false)\n    const [error, setError] = useState('')\n    const [submitting, setSubmitting] = useState(false)\n    const [register, setRegister] = useState({\n        email: '',\n        passwd: ''\n    })\n\n    const handleChange = (event) => {\n        setRegister({\n            ...register,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleShow = () => setShow(true)\n    const handleClose = () => {\n        setShow(false)\n        setError('')\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget\n        if (form.checkValidity()) {\n            setSubmitting(true)\n            firebase.doSignInWithEmailAndPasswd(register)\n                .then(() => {\n                    setShow(false)\n                    setRegister({ email: '', passwd: '' })\n                })\n                .catch(e => {\n                    setError(e.message)\n                    setSubmitting(false)\n                })\n        }\n        setValidated(true)\n        event.preventDefault()\n    }\n\n    const handleFacebook = () => {\n        firebase.doSignInWithFacebook()\n    }\n\n    const handleGoogle = () => {\n        firebase.doSignInWithGoogle()\n    }\n\n    return (\n        <React.Fragment>\n\n            <Button variant=\"dark\" onClick={handleShow}>\n                S'identifier\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Connectez-vous via\n                        <FontAwesomeIcon className=\"ml-2\"\n                            onClick={handleFacebook}\n                            icon={faFacebookF} color=\"#3b5998\" />\n                        <FontAwesomeIcon className=\"ml-2\"\n                            onClick={handleGoogle}\n                            icon={faGoogle} color=\"#DD4B39\" />\n                    </Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit} >\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email/Identifiant</Form.Label>\n                            <Form.Control required type=\"email\" readOnly={submitting}\n                                value={register.email} name=\"email\" onChange={handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required type=\"password\" readOnly={submitting}\n                                value={register.passwd} name=\"passwd\" onChange={handleChange} />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button as={Link} to=\"/signup\"\n                            variant=\"link\"\n                            onClick={handleClose}\n                            disabled={submitting}>\n                            créer un compte\n                        </Button>\n                        <Button variant=\"secondary\"\n                            onClick={handleClose}\n                            disabled={submitting}>\n                            Fermer\n                        </Button>\n                        <Button variant=\"primary\"\n                            type=\"submit\"\n                            disabled={submitting}>\n                            S'identifier\n                        </Button>\n                        {error &&\n                            <Alert variant=\"danger\">{error}</Alert>\n                        }\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nfunction User() {\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n\n    const handleClick = () => {\n        firebase.auth().signOut()\n    }\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                variant=\"info\"\n                id=\"dropdown-basic\">\n                <FontAwesomeIcon\n                    className=\"mr-1\"\n                    icon={faUserCog} />\n                {user.displayName}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"dropdown-menu-md-right\">\n                <Dropdown.Item as={Link} to='/profile'>Profile</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={handleClick} >Déconnecter</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport { User, NotUser }\n","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\nimport { User, NotUser } from \"./session\"\n\nexport default function Session() {\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n    return (\n        <React.Fragment>\n            {user && <User />}\n            {!user && <NotUser />}\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport routes from \"../../constants/routes\"\nimport Session from \"../Session/index\"\n\nexport default function Navigation() {\n    return (\n        <Navbar className=\"mb-2\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Parole Héritage</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {routes.map(route => (\n                        <LinkContainer key={route.path} to={route.path}>\n                            <Nav.Link >{route.name}</Nav.Link>\n                        </LinkContainer>\n                    ))}\n                </Nav>\n                <Session />\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport routes, { routesParams } from '../../constants/routes'\nimport { Firebase } from \"../../stores/Firebase/index\"\nimport { Themes } from \"../../stores/Themes/index\"\nimport Authentization from \"../../stores/Authentication/index\"\nimport { Container } from 'react-bootstrap'\nimport Navigation from \"../Navigation/index\"\n\nexport default function App() {\n    return (\n        <HashRouter basename='/'>\n            <Themes>\n                <Firebase>\n                    <Navigation />\n                    <Container>\n                        <Authentization>\n                            <Switch>\n                                {routes.map(route => <Route key={route.path} {...route} />)}\n                                {routesParams.map(route => <Route key={route.path} {...route} />)}\n                            </Switch>\n                        </Authentization>\n                    </Container>\n                </Firebase>\n            </Themes>\n        </HashRouter>\n    )\n}\n"],"sourceRoot":""}