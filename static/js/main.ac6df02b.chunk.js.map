{"version":3,"sources":["components/Firebase/firebase.jsx","components/Session/index.jsx","components/Navigation/index.jsx","components/Home/index.jsx","components/Liste/index.jsx","components/Parole/index.jsx","components/Profile/index.jsx","components/Edition/index.jsx","components/SignUp/index.jsx","components/App/index.jsx","serviceWorker.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","React","createContext","str","storage","auth","db","database","fstr","firestore","doc","useDocument","col","useCollection","us","useAuthState","Firebase","children","firebase","useContext","Provider","value","App","user","LogIn","LogOut","useState","error","setError","email","passwd","lastname","firstname","username","register","setRegister","handleChange","e","target","name","showLogin","setShowLogin","handleCloseLogin","ButtonToolbar","Button","className","onClick","variant","Modal","show","onHide","Header","closeButton","Title","Form","onSubmit","event","signInWithEmailAndPassword","then","catch","code","ERROR_CODE_ACCOUNT_NOEXISTS","message","preventDefault","Body","Group","as","Row","controlId","Label","column","sm","Col","Control","onChange","type","Footer","Alert","size","Link","to","history","useHistory","Dropdown","Toggle","id","icon","faUserCog","Menu","Item","eventKey","Divider","signOut","push","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","href","aria-controls","Collapse","Nav","Home","collection","snapshotListenOptions","includeMetadataChanges","loading","Spinner","animation","AjoutParole","ListGroup","docs","map","key","data","titre","isAnonymous","AjouterFavoris","artiste","createBy","uid","setShow","parole","item","setItem","validated","setValidated","handleShow","faPlus","noValidate","currentTarget","checkValidity","add","createAt","Timestamp","fromDate","Date","displayName","ref","stopPropagation","md","required","placeholder","Feedback","rows","favsPath","state","setState","refFavUser","setRefFavUser","useEffect","where","get","path","faStar","pull","delete","color","Parole","useParams","Jumbotron","fluid","Container","initialising","Tab","defaultActiveKey","faMusic","faListOl","NotificationBadge","faUser","Content","Pane","Profile","Chansons","Favoris","NotificationContent","Card","body","border","Image","src","roundedCircle","Text","Subtitle","synopsis","dateCreatedAccount","toDate","toString","CardColumns","i","faTrashAlt","title","handleDelete","faBell","Badge","Edite","edit","setEdit","runTransaction","tr","String","update","editBy","goBack","setLoading","groups","setGroupes","city","handleClose","createUserWithEmailAndPassword","authUser","set","split","currentUser","sendEmailVerification","url","updateProfile","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","ERROR_MSG_USERNAME_EXISTS","Check","label","disabled","role","aria-hidden","scrollable","exact","component","Liste","SignUp","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac6df02b.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { firestore, database, storage, auth, initializeApp } from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\n\n/* ##### */\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\ninitializeApp(firebaseConfig)\n/* ##### */\n\nconst FirebaseContext = React.createContext({\n    str: storage,\n    auth: auth,\n    db: database,\n    fstr: firestore,\n    doc: useDocument,\n    col: useCollection,\n    us: useAuthState\n})\n\nfunction Firebase({ children }) {\n    const firebase = useContext(FirebaseContext)\n    return (\n        <FirebaseContext.Provider value={firebase}>\n            {children}\n        </FirebaseContext.Provider>\n    )\n}\n\nexport { Firebase, FirebaseContext }\n","import React, { useState } from 'react'\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Row, Form, Col, Modal, Alert, ButtonToolbar, Dropdown } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons';\n\nexport default function App() {\n    const [user] = useAuthState(firebase.auth())\n    return (\n        <span>\n            {!user && <LogIn />}\n            {user && <LogOut />}\n        </span>\n    )\n}\n\nfunction LogIn() {\n    const [error, setError] = useState(\"\")\n    const [register, setRegister] = useState({\n        email: \"\",\n        passwd: \"\",\n        lastname: \"\",\n        firstname: \"\",\n        username: \"\"\n    })\n\n    const handleChange = (e) => {\n        setRegister({\n            ...register,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const [showLogin, setShowLogin] = useState(false);\n    const handleCloseLogin = () => setShowLogin(false);\n    const handleShowLogin = () => setShowLogin(true);\n\n    const signInWithEmail = (event) => {\n        firebase.auth().signInWithEmailAndPassword(register.email, register.passwd)\n            .then(() => {\n                setShowLogin(false)\n                setError(\"\")\n            })\n            .catch(error => {\n                if (error.code === ERROR_CODE_ACCOUNT_NOEXISTS)\n                    setError(error.message)\n            })\n        event.preventDefault()\n    }\n\n    return (\n        <span>\n            <ButtonToolbar>\n                <Button className=\"ml-1\" onClick={handleShowLogin} variant=\"link\">Se connecter</Button>\n            </ButtonToolbar>\n\n            <Modal show={showLogin} onHide={handleCloseLogin}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Connectez-vous</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={signInWithEmail}>\n                    <Modal.Body>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Form.Label column sm=\"2\">\n                                Identifiant\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control value={register.email} name=\"email\" onChange={handleChange} type=\"email\" />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Mot de passe\n                                    </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control type=\"password\" value={register.passwd} name=\"passwd\" onChange={handleChange} />\n                            </Col>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseLogin}>\n                            Fermer\n                                </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            S'identifier\n                                </Button>\n                        {error &&\n                            <Alert variant=\"danger\">{error}</Alert>\n                        }\n                    </Modal.Footer>\n                </Form>\n                <ButtonToolbar>\n                    <Button size=\"sm\" as={Link} to={\"/paroletahitienne/signup\"} onClick={handleCloseLogin} variant=\"link\">Créer un compte</Button>\n                </ButtonToolbar>\n            </Modal>\n        </span>\n    )\n}\n\nfunction LogOut() {\n    const history = useHistory()\n    const handleClick = () => {\n        firebase.auth().signOut()\n        history.push(\"/\")\n    }\n    return (\n        <ButtonToolbar>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-custom-1\">\n                    <FontAwesomeIcon\n                        icon={faUserCog}\n                        size=\"lg\"\n                    />\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu-md-right\">\n                    <Dropdown.Item as={Link} to=\"/profile\" eventKey=\"1\">Profile</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item onClick={handleClick} eventKey=\"4\">Se Déconnecter</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </ButtonToolbar>\n    )\n}\n\nconst ERROR_CODE_ACCOUNT_NOEXISTS = \"auth/user-not-found\"","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Session from \"../Session/index\"\n\nexport default function Navigation() {\n    return (\n        <Navbar className=\"mb-1\" collapseOnSelect expand=\"lg\" bg=\"light\" >\n            <Navbar.Brand href=\"/\">Parole Tahitienne</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/\">\n                        <Nav.Link>Home</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/liste\">\n                        <Nav.Link>Liste</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Session />\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            HomePage:\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\nimport { FirebaseContext } from \"../Firebase/index\"\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport { ListGroup, Alert, Spinner, Form, Modal, Button, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faPlus } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function App() {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [user] = useAuthState(firebase.auth())\n\n    const [value, loading, error] = useCollection(\n        firebase.fstr().collection('paroles'),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    return (\n        <div>\n            {error && <Alert variant=\"danger\">Erreur: {error}</Alert>}\n            {loading && (\n                <Spinner animation=\"grow\" variant=\"primary\" ></Spinner>\n            )\n            }\n            {\n                value && (\n                    <div>\n                        <AjoutParole firebase={firebase} />\n                        <ListGroup variant=\"flush\">\n                            {value.docs.map((doc) => (\n                                <ListGroup.Item variant=\"light\" as={Link}\n                                    to={`/liste=${doc.id}`} key={doc.id}>\n                                    {doc.data().titre}\n                                    {user && !user.isAnonymous &&\n                                        <AjouterFavoris firebase={firebase} data={{\n                                            id: doc.id,\n                                            titre: doc.data().titre,\n                                            artiste: doc.data().artiste,\n                                            createBy: doc.data().createBy\n                                        }} uid={user.uid} />\n                                    }\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    </div>\n                )\n            }\n        </div >\n    );\n}\n\nfunction AjoutParole({firebase}) {\n\n    const [user] = useAuthState(firebase.auth())\n    const [show, setShow] = useState(false);\n    const [item, setItem] = useState({\n        titre: \"\",\n        artiste: \"\",\n        parole: \"\",\n    });\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e) => {\n        setItem({\n            ...item,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n    };\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity()) {\n            firebase.fstr().collection('paroles').add({\n                ...item,\n                createAt: firebase.fstr.Timestamp.fromDate(new Date()),\n                uid: user ? user.uid : 'anonymous',\n                createBy: user ? user.displayName : 'anonymous'\n            }).then((ref) => {\n                if (user) {\n                    /* anonymous ne peut pas ajouter une chanson dans cette collection */\n                    firebase.fstr().collection(`users/${user.uid}/chansons`).add({\n                        id: ref.id,\n                        createAt: firebase.fstr.Timestamp.fromDate(new Date()),\n                        titre: item.titre,\n                        artiste: item.artiste\n                    }).then(() => {\n                        setItem({\n                            titre: \"\",\n                            artiste: \"\",\n                            parole: \"\",\n                        })\n                        setValidated(false)\n                    })\n                }\n            })\n            setShow(false)\n        } else\n            setValidated(true);\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    return (\n        <div>\n            <Button variant=\"link\" onClick={handleShow}>\n                <FontAwesomeIcon className=\"mr-1\" icon={faPlus} size=\"lg\" />\n                Ajouter une chanson\n            </Button>\n\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Ajouter une nouvelle chanson</Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Modal.Body>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n                                <Form.Label>Titre</Form.Label>\n                                <Form.Control\n                                    required\n                                    name=\"titre\"\n                                    value={item.titre}\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    placeholder=\"titre parole tahitienne\"\n                                />\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n                                <Form.Label>Artiste</Form.Label>\n                                <Form.Control\n                                    required\n                                    name=\"artiste\"\n                                    value={item.artiste}\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    placeholder=\"artiste parole tahitienne\"\n                                />\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Parole</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"parole\"\n                                value={item.parole}\n                                onChange={handleChange}\n                                as=\"textarea\" rows=\"5\" />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleShow}>\n                            Annuler\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Sauvegarder\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div >\n    )\n\n}\n\nfunction AjouterFavoris({ data, uid, firebase }) {\n\n    const favsPath = `users/${uid}/favorites`\n\n    const [state, setState] = useState(false);\n    const [refFavUser, setRefFavUser] = useState('');\n\n    useEffect(() => {\n        firebase.fstr().collection(favsPath)\n            .where(\"id\", \"==\", data.id).get()\n            .then(data => {\n                if (data.size) {\n                    setState(true)\n                    setRefFavUser(data.docs[0].ref.path)\n                }\n            })\n    });\n\n    const handleFavorite = (event) => {\n        if (!state) {\n            firebase.fstr().collection(favsPath).add(data)\n            setState(true)\n        }\n        else {\n            firebase.fstr().doc(refFavUser).delete()\n            setState(false)\n            setRefFavUser('')\n        }\n        event.stopPropagation()\n        event.preventDefault()\n    }\n\n    return (\n        <FontAwesomeIcon\n            icon={faStar}\n            pull=\"right\"\n            size=\"lg\"\n            onClick={handleFavorite}\n            color={state ? 'green' : ''}\n        />\n    )\n}","import React from 'react'\nimport { useParams } from 'react-router-dom';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { useDocument } from 'react-firebase-hooks/firestore';\n\nimport { Alert, Spinner, Jumbotron, Container, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\n\nexport default function Parole() {\n    const { id } = useParams()\n    const [value, loading, error] = useDocument(\n        firebase.firestore().doc(`paroles/${id}`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    return (\n        <div>\n            {error && <Alert variant=\"danger\">Erreur: {error}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {value && (\n                <Jumbotron fluid>\n                    <Button as={Link} to={`/edit=${id}`} variant=\"link\">editer</Button>\n                    <Container>\n                        <h1>{value.data().titre}</h1>\n                        <pre>\n                            {value.data().parole}\n                        </pre>\n                    </Container>\n                </Jumbotron>\n            )}\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../Firebase/index\"\n\nimport { Card, Alert, Spinner, Row, Col, Image, Nav, Tab, CardColumns, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic, faListOl, faStar, faUser, faTrashAlt, faBell } from '@fortawesome/free-solid-svg-icons';\n\n/* import Notification from \"../Notification/index\"; */\nexport default function App() {\n\n    const firebase = useContext(FirebaseContext)\n    const [user, initialising, error] = firebase.us(firebase.auth());\n    return (\n        <div>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {initialising && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {user && (\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"third\">\n                    <Row>\n                        <Col md={3}>\n                            <Nav variant=\"tabs\" className=\"flex-md-column mb-1\">\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"first\">\n                                        <FontAwesomeIcon icon={faMusic} />\n                                        <FontAwesomeIcon icon={faListOl} />\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"second\">\n                                        <FontAwesomeIcon icon={faStar} />\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <NotificationBadge uid={user.uid} />\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"third\">\n                                        <FontAwesomeIcon icon={faUser} />\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col md={9}>\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"third\">\n                                    <Profile uid={user.uid} />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"first\">\n                                    <Chansons uid={user.uid} />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"second\">\n                                    <Favoris uid={user.uid} />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"four\">\n                                    <NotificationContent uid={user.uid} />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Tab.Container>\n            )}\n            {!user && <Alert variant=\"warning\">\n                Pas de profile pour vous xD. Veuillez créer un compte!\n                </Alert>}\n        </div>\n    )\n\n}\n\nfunction Profile({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n    const [value, loading, error] = firebase.doc(firebase.fstr().doc(`users/${uid}`));\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Profile</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <Card border=\"light\" className=\"text-center\">\n                    <Row>\n                        <Col></Col>\n                        <Col>\n                            <Image src=\"https://via.placeholder.com/150\" roundedCircle />\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                    <Card.Body>\n                        <Card.Title>{value.data().lastname} {value.data().firstname}</Card.Title>\n                        <Card.Text>\n                            Nom utilisateur: {value.data().username}\n                        </Card.Text>\n                        <Card.Subtitle className=\"mb-1 text-muted\">{value.data().synopsis}</Card.Subtitle>\n                        <Card.Text>\n                            Créer le: {value.data().dateCreatedAccount.toDate().toString()}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            )}\n        </div>\n    )\n}\n\nfunction Favoris({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value, loading, error] = firebase.col(\n        firebase.fstr().collection(`users/${uid}/favorites`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    const handleDelete = (ref, event) => {\n        firebase.fstr().doc(ref).delete()\n        event.preventDefault()\n    }\n\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Favoris</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <CardColumns>\n                    {value.docs.map((doc, i) => (\n                        <Card key={doc.id} border=\"dark\">\n                            <Card.Header>\n                                {i + 1}\n                                <FontAwesomeIcon\n                                    icon={faTrashAlt}\n                                    pull=\"right\"\n                                    size=\"lg\"\n                                    onClick={e => handleDelete(doc.ref.path, e)}\n                                    color='red'\n                                />\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>{doc.data().titre}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    Artiste: {doc.data().artiste}\n                                </Card.Subtitle>\n                                <footer className=\"blockquote-footer\">\n                                    Ajoutée par <cite title={doc.data().createBy}>{doc.data().createBy}</cite>\n                                </footer>\n                                <Card.Link as={Link} to={`/liste=${doc.data().id}`}>\n                                    Consulter\n                                </Card.Link>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n            )}\n        </div>\n    )\n}\n\nfunction Chansons({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value, loading, error] = firebase.col(\n        firebase.fstr().collection(`users/${uid}/chansons`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    const handleDelete = (doc, event) => {\n        firebase.fstr().doc(`paroles/${doc.data().id}`).delete()\n        firebase.fstr().doc(doc.ref.path).delete()\n        event.preventDefault()\n    }\n\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Chansons</Card>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {!error && <Alert variant=\"info\">La liste des chansons que vous avez contribuées à ajouter!</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {!loading && value && (\n                <CardColumns>\n                    {value.docs.map((doc, i) => (\n                        <Card key={doc.id} border=\"success\">\n                            <Card.Header>\n                                {i + 1}\n                                <FontAwesomeIcon\n                                    icon={faTrashAlt}\n                                    pull=\"right\"\n                                    size=\"lg\"\n                                    onClick={e => handleDelete(doc, e)}\n                                    color='red'\n                                />\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    {doc.data().titre}\n                                </Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                    Artiste: {doc.data().artiste}\n                                </Card.Subtitle>\n                                <footer className=\"blockquote-footer\">\n                                    Ajoutée le <cite title={doc.data().createAt.toDate().toString()}>{doc.data().createAt.toDate().toString()}</cite>\n                                </footer>\n                                <Card.Link as={Link} to={`/liste=${doc.data().id}`}>\n                                    Consulter\n                                </Card.Link>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n            )}\n        </div>\n    )\n}\n\nfunction NotificationBadge({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value] = firebase.col(\n        firebase.fstr().collection(`notifications/${uid}/chansons`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    return (\n        <Nav.Link eventKey=\"four\">\n            <FontAwesomeIcon icon={faBell} />\n            {value && value.size > 0 &&\n                <Badge className=\"float-right\" variant=\"info\">{value.size}</Badge>\n            }\n        </Nav.Link>\n    )\n}\n\nfunction NotificationContent({ uid }) {\n\n    const firebase = useContext(FirebaseContext)\n\n    const [value] = firebase.col(\n        firebase.fstr().collection(`notifications/${uid}/chansons`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        })\n\n    return (\n        <div>\n            <Card className=\"mb-3\" body>Notifications</Card>\n            {value && value.size > 0 && <div>\n                <Alert variant=\"info\">Chansons Re-editées {value.size}</Alert>\n                {value.docs.map((doc) => (\n                    <Row key={doc.id}>\n                        <Col md={6}>\n                            <pre>{doc.data().parole[0]}</pre>\n                        </Col>\n                        <Col md={6}>\n                            <pre>{doc.data().parole[1]}</pre>\n                        </Col>\n                    </Row>\n                ))}\n            </div>}\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport { FirebaseContext } from \"../Firebase/index\";\n\nimport { Form, Button } from 'react-bootstrap';\n\nexport default function App() {\n    return (\n        <Edite />\n    )\n}\n\nfunction Edite() {\n\n    const firebase = useContext(FirebaseContext)\n    const firestore = firebase.fstr\n    const [user] = firebase.us(firebase.auth())\n\n\n    const { id } = useParams()\n    const history = useHistory()\n\n    const [edit, setEdit] = useState('');\n\n    const [value] = firebase.doc(\n        firestore().doc(`paroles/${id}`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    useEffect(() => {\n        if (value)\n            setEdit(value.data().parole)\n    }, [value]);\n\n    const handleSubmit = event => {\n        const ref = firestore().doc(`paroles/${id}`)\n        firestore().runTransaction((tr) => {\n            return tr.get(ref)\n                .then(doc => {\n                    const parole = String(doc.data().parole)\n                    const uid = String(doc.data().uid)\n                    tr.update(ref, {\n                        parole: edit,\n                        editBy: user ? user.displayName : 'anonymous'\n                    })\n                    return { parole, uid }\n                }).then(({ parole, uid }) => {\n                    firestore().collection('notifications').doc(uid)\n                        .collection(\"chansons\").add({\n                            parole: [parole, edit],\n                            id,\n                            editBy: user ? user.displayName : 'anonymous'\n                        })\n                }).then(() => {\n                    history.goBack()\n                })\n        })\n\n        event.preventDefault()\n    }\n\n    return (\n        <div>\n            {value &&\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Example textarea</Form.Label>\n                        <Form.Control\n                            value={edit}\n                            name=\"edit\"\n                            onChange={e => setEdit(e.target.value)}\n                            as=\"textarea\" rows=\"18\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" >Sauvegarder</Button>\n                </Form>\n            }\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react'\n\nimport { FirebaseContext } from \"../Firebase/index\"\n\nimport { Form, Button, Col, Alert, Spinner, Modal } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nexport default function App() {\n\n    const firebase = useContext(FirebaseContext)\n    const firestore = firebase.fstr\n\n    const history = useHistory()\n\n    const [validated, setValidated] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const [show, setShow] = useState(false)\n\n    const [groups, setGroupes] = useState(\"\")\n    const [register, setRegister] = useState({\n        email: \"\",\n        passwd: \"\",\n        lastname: \"\",\n        firstname: \"\",\n        username: \"\",\n        city: \"\",\n        synopsis: \"\"\n    })\n\n    const handleChange = (event) => {\n        setRegister({\n            ...register,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const createNewUser = (event) => {\n\n        const form = event.currentTarget;\n\n        if (form.checkValidity()) {\n            setLoading(true)\n            firestore().collection('users').where(\"username\", \"==\", register.username).get()\n                .then((data) => {\n                    if (data.size === 0) {\n                        firebase.auth()\n                            .createUserWithEmailAndPassword(register.email, register.passwd)\n                            .then(authUser => {\n                                // Create a user in your Firebase Realtime database\n                                return firestore().collection('users').doc(authUser.user.uid)\n                                    .set({\n                                        ...register,\n                                        passwd: '',\n                                        groups: groups.split(\",\"),\n                                        dateCreatedAccount: firebase.firestore.Timestamp.fromDate(new Date()),\n                                    });\n                            })\n                            .then(() => {\n                                return firebase.auth().currentUser.sendEmailVerification({\n                                    url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n                                })\n                            })\n                            .then(() => {\n                                return firebase.auth().currentUser.updateProfile({\n                                    displayName: register.username,\n                                });\n                            })\n                            .then(() => {\n                                history.push(\"/\")\n                            })\n                            .catch(error => {\n                                if (error.code === ERROR_CODE_ACCOUNT_EXISTS)\n                                    setError(ERROR_MSG_ACCOUNT_EXISTS);\n                            });\n                    }\n                    else {\n                        setError(ERROR_MSG_USERNAME_EXISTS)\n                        setLoading(false)\n                    }\n                })\n        }\n        setValidated(true);\n        event.preventDefault();\n    }\n\n    const handleShowCondition = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    return (\n        <Form className=\"mb-4\" noValidate validated={validated} onSubmit={createNewUser}>\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control required name=\"email\"\n                        value={register.email} onChange={handleChange}\n                        type=\"email\" placeholder=\"parole@tahitienne.com\" />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required name=\"passwd\"\n                        value={register.passwd} onChange={handleChange}\n                        type=\"password\" placeholder=\"petea\" />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Nom</Form.Label>\n                    <Form.Control required name=\"lastname\"\n                        value={register.lastname} onChange={handleChange}\n                        type=\"text\" placeholder=\"\"\n                    />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Prénom</Form.Label>\n                    <Form.Control required name=\"firstname\"\n                        value={register.firstname} onChange={handleChange}\n                        type=\"text\" placeholder=\"\"\n                    />\n                </Form.Group>\n            </Form.Row>\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Ville</Form.Label>\n                    <Form.Control required name=\"city\"\n                        value={register.city} onChange={handleChange}\n                        type=\"text\" placeholder=\"Paea\"\n                    />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Nom utilisateur</Form.Label>\n                    <Form.Control required name=\"username\"\n                        type=\"text\"\n                        value={register.username} onChange={handleChange}\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <hr />\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Groupe</Form.Label>\n                    <Form.Control name=\"groups\"\n                        value={groups} onChange={e => setGroupes(e.target.value)}\n                        type=\"text\" placeholder=\"Kiti,Koto,Kata\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n                <Form.Label>vous concernant</Form.Label>\n                <Form.Control\n                    name=\"synopsis\"\n                    as=\"textarea\"\n                    value={register.synopsis} onChange={handleChange}\n                />\n            </Form.Group>\n\n            <Form.Group id=\"formGridCheckbox\">\n                <Button variant=\"link\"\n                    onClick={handleShowCondition} size=\"sm\">\n                    conditions d'utilisation\n                    </Button>\n                <Form.Check required className=\"text-left\" type=\"checkbox\" label=\"J'accepte\" />\n            </Form.Group>\n\n            <Button variant={loading ? 'link' : 'primary'} type=\"submit\" disabled={loading}>\n                {loading ? <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                /> : 'Inscription'}\n            </Button>\n            {error && <Alert className=\"mt-2\" variant=\"danger\">{error}</Alert>}\n\n            <Modal scrollable show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Parole Tahitienne</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h2>Conditions d'utilisation</h2>\n                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro veniam quis dolorem ipsa sapiente ex, hic obcaecati ducimus culpa. Doloribus itaque ducimus temporibus impedit tempora, totam, qui aspernatur nihil rem atque assumenda officiis officia ad sunt deserunt doloremque optio in quibusdam quaerat? Optio minus fugit id consequuntur blanditiis voluptates necessitatibus. Praesentium totam ut eos sint pariatur fugiat nulla nam perspiciatis velit! Illo explicabo aut, veniam veritatis quia sit accusamus. Fugit, dicta earum quibusdam ex quia quod esse aut distinctio saepe dolor sunt itaque facere ut quasi alias velit odio repellendus molestiae voluptatem suscipit. Atque in, repellendus dolore ea beatae impedit rem eum hic sit aspernatur saepe laboriosam facilis suscipit odio, dolores similique provident, molestiae neque enim doloremque recusandae cumque id.</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Form>\n    )\n}\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\nconst ERROR_MSG_ACCOUNT_EXISTS = 'Cet email est déjà utilisé!';\nconst ERROR_MSG_USERNAME_EXISTS = 'Ce nom utilisateur est déjà utilisé!';\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { Firebase } from \"../Firebase/index\"\nimport Navigation from \"../Navigation/index\";\nimport Home from \"../Home/index\"\nimport Liste from \"../Liste/index\"\nimport Parole from \"../Parole/index\"\nimport Profile from \"../Profile/index\"\nimport Edite from \"../Edition/index\"\nimport SignUp from \"../SignUp/index\"\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Firebase>\n                <Navigation />\n                <div className=\"container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/liste\" component={Liste} />\n                        <Route exact path=\"/liste=:id\" component={Parole} />\n                        <Route exact path=\"/profile\" component={Profile} />\n                        <Route exact path=\"/edit=:id\" component={Edite} />\n                        <Route exact path=\"/signup\" component={SignUp} />\n                    </Switch>\n                </div>\n            </Firebase>\n        </BrowserRouter>\n    )\n};\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}