{"version":3,"sources":["stores/Firebase/firebase.jsx","components/Liste/index.jsx","components/CGU/index.jsx","constants/routes.jsx","components/Accueil/index.jsx","components/Apropos/index.jsx","components/Parole/index.jsx","components/Session/signUp.jsx","components/Session/session.jsx","components/Session/index.jsx","components/Navigation/index.jsx","serviceWorker.js","index.js","components/App/index.jsx"],"names":["initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","React","createContext","storage","auth","database","firestore","useDocument","useCollection","user","currentUser","addParole","data","Promise","editParole","doSignUpWithEmailAndPasswd","doSignInWithEmailAndPasswd","doSignInWithFacebook","doSignInWithGoogle","Firebase","children","useAuthState","firebase","resolve","reject","collection","add","then","reference","uid","catch","e","doc","id","user_","displayName","runTransaction","tr","a","async","get","paroles","String","utilisateur","ajout_par","update","edit","editBy","date_edit","editee_par","where","utilsateur","usernames","size","createUserWithEmailAndPassword","email","passwd","authUser","set","sendEmailVerification","url","updateProfile","message","signInWithEmailAndPassword","signInWithPopup","FacebookAuthProvider","date_creation","metadata","creationTime","GoogleAuthProvider","Provider","value","AjoutParole","useContext","useState","validated","setValidated","submit","setSubmit","show","setShow","artistes","titre","groupes","item","setItem","handleClose","handleChange","target","name","useEffect","Fragment","Button","onClick","variant","className","icon","faPlus","Modal","onHide","Header","closeButton","Title","Form","noValidate","onSubmit","currentTarget","checkValidity","date_ajout","moment","local","format","length","split","preventDefault","Body","Row","Group","as","Col","md","controlId","Label","Control","readOnly","required","onChange","type","placeholder","rows","Footer","ButtonGroup","disabled","Link","to","App","path","component","exact","snapshotListenOptions","includeMetadataChanges","docs","loading","error","Alert","Spinner","animation","ListGroup","map","Item","key","routesParams","useParams","submitting","setSubmitting","event","Jumbotron","srOnly","plaintext","TextareaAutosize","history","useHistory","setError","nom","prenom","ville","apropos","date_naissance","register","setRegister","push","Timestamp","fromDate","Date","Check","label","role","aria-hidden","scrollable","NotUser","faFacebookF","color","faGoogle","User","Dropdown","Toggle","faUserCog","Menu","Divider","signOut","Navbar","collapseOnSelect","expand","bg","Brand","href","aria-controls","Collapse","Nav","routes","route","Boolean","window","location","hostname","match","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c03d5e4.chunk.js","sourcesContent":["import React from 'react'\nimport { firestore, database, storage, auth, initializeApp } from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore'\n/* ##### */\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\ninitializeApp(firebaseConfig)\n/* ##### */\n\nconst FirebaseContext = React.createContext({\n    storage,\n    auth,\n    database,\n    firestore,\n    useDocument,\n    useCollection,\n    user: auth().currentUser,\n    addParole: (data) => { return new Promise() },\n    editParole: (data) => { return new Promise() },\n    doSignUpWithEmailAndPasswd: (data) => { return new Promise() },\n    doSignInWithEmailAndPasswd: (data) => { return new Promise() },\n    doSignInWithFacebook: () => { },\n    doSignInWithGoogle: () => { },\n\n})\n\nfunction Firebase({ children }) {\n\n    const [user] = useAuthState(auth())\n\n    const doSignUpWithEmailAndPasswd = (data) => {\n        return new Promise((resolve, reject) => {\n            firestore().collection('utilisateurs')\n                .where(\"utilsateur\", \"==\", data.utilsateur).get()\n                .then((usernames) => {\n                    if (usernames.size === 0) {\n                        auth().createUserWithEmailAndPassword(data.email, data.passwd)\n                            .then((authUser) => {\n                                return firestore().collection('utilisateurs')\n                                    .doc(authUser.user.uid)\n                                    .set({ ...data, passwd: '' })\n                            })\n                            .then(() => {\n                                return auth().currentUser.sendEmailVerification({\n                                    url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n                                })\n                            })\n                            .then(() => {\n                                auth().currentUser.updateProfile({\n                                    displayName: data.utilsateur,\n                                })\n                                resolve(auth().currentUser)\n                            })\n                            .catch(e => { reject(e) })\n                    } else {\n                        reject({ message: \"Ce nom d'utilisateur est déjà utilisé!\" })\n                    }\n                })\n        })\n    }\n\n    const doSignInWithGoogle = () =>\n        auth().signInWithPopup(new auth.GoogleAuthProvider())\n            .then((authUser) => {\n                firestore().collection('utilisateurs').doc(authUser.user.uid)\n                    .set({\n                        utilisateur: authUser.user.displayName,\n                        email: authUser.user.email,\n                        date_creation: authUser.user.metadata.creationTime\n                    })\n            })\n\n    const doSignInWithFacebook = () =>\n        auth().signInWithPopup(new auth.FacebookAuthProvider())\n            .then((authUser) => {\n                firestore().collection('utilisateurs').doc(authUser.user.uid)\n                    .set({\n                        utilisateur: authUser.user.displayName,\n                        email: authUser.user.email,\n                        date_creation: authUser.user.metadata.creationTime\n                    })\n            })\n\n    const doSignInWithEmailAndPasswd = (data) => {\n        return new Promise((resolve, reject) => {\n            auth().signInWithEmailAndPassword(data.email, data.passwd)\n                .then((auth) => { resolve(auth) })\n                .catch(e => { reject(e) })\n        })\n    }\n\n    const addParole = (data) => {\n        return new Promise((resolve, reject) => {\n            firestore().collection('chansons').add({ ...data })\n                .then(reference => {\n                    firestore()\n                        .collection(user ? `utilisateurs/${user.uid}/chansons` : 'utilisateurs/anonymous/chansons')\n                        .add({ reference })\n                    resolve(reference)\n                })\n                .catch(e => { reject(e) })\n        })\n    }\n\n    const editParole = (data) => {\n        return new Promise((resolve, reject) => {\n            const reference = firestore().doc(`paroles/${data.id}`)\n            const user_ = user ? user.displayName : 'anonymous'\n            firestore().runTransaction(async (tr) => {\n                const doc = await tr.get(reference)\n                const paroles = String(doc.data().paroles)\n                const utilisateur = String(doc.data().ajout_par)\n                tr.update(reference, {\n                    paroles: data.edit,\n                    editBy: user_,\n                    date_edit: data.date_edit\n                })\n                firestore().collection(`notifications/${utilisateur}/chansons`).add({\n                    paroles: [paroles, data.edit],\n                    reference,\n                    editee_par: user_\n                })\n            })\n        })\n    }\n\n    const firebase = {\n        storage,\n        auth,\n        database,\n        firestore,\n        useDocument,\n        useCollection,\n        user,\n        addParole,\n        editParole,\n        doSignUpWithEmailAndPasswd,\n        doSignInWithEmailAndPasswd,\n        doSignInWithFacebook,\n        doSignInWithGoogle\n    }\n\n    return (\n        <FirebaseContext.Provider value={firebase}>\n            {children}\n        </FirebaseContext.Provider>\n    )\n}\n\nexport { Firebase, FirebaseContext }\n","import React, { useContext, useState, useEffect } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\n\nimport { Link } from 'react-router-dom'\nimport { Spinner, ListGroup, Alert, Button, Modal, Form, Col, ButtonGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nexport default function App() {\n    const firebase = useContext(FirebaseContext)\n\n    const [docs, loading, error] = firebase.useCollection(\n        firebase.firestore().collection('chansons'),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true }\n        }\n    )\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\"></Spinner>}\n            {docs && (\n                <React.Fragment>\n                    <AjoutParole />\n                    <ListGroup variant=\"flush\">\n                        {docs.docs.map(doc => (\n                            <ListGroup.Item variant=\"light\" as={Link} to={`/liste=${doc.id}`} key={doc.id}>{doc.data().titre}</ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    )\n}\n\nfunction AjoutParole() {\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n\n    const [validated, setValidated] = useState(false)\n    const [submit, setSubmit] = useState(false)\n    const [show, setShow] = useState(false)\n    const [item, setItem] = useState({\n        paroles: '',\n        artistes: '',\n        titre: '',\n        groupes: '',\n    })\n\n    const handleOpen = () => setShow(true)\n    const handleClose = () => setShow(false)\n    const handleChange = (e) => setItem({ ...item, [e.target.name]: e.target.value })\n\n    const handleSubmit = (e) => {\n        const form = e.currentTarget\n\n        if (form.checkValidity()) {\n            setItem({\n                ...item,\n                date_ajout: moment().local('fr').format('LLL'),\n                ajout_par: user ? user.displayName : 'anonymous',\n                artistes: item.artistes.length > 0 ? item.artistes.split(';') : '',\n                groupes: item.groupes.length > 0 ? item.groupes.split(';') : ''\n            })\n            setSubmit(true)\n        }\n        setValidated(true)\n        e.preventDefault()\n    }\n\n    useEffect(() => {\n        if (submit) {\n            firebase.addParole(item)\n                .then(() => {\n                    setShow(false)\n                    setItem({\n                        paroles: '',\n                        artistes: '',\n                        titre: '',\n                        groupes: '',\n                    })\n                })\n                .then(() => {\n                    setSubmit(false)\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [submit])\n\n    return (\n        <React.Fragment>\n            <Button onClick={handleOpen} variant=\"link\">\n                <FontAwesomeIcon className=\"mr-1\" icon={faPlus} />\n                Ajouter une chanson\n            </Button>\n\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Ajouter une Chanson</Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n\n                    <Modal.Body>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"6\" controlId=\"formGridTiltle\">\n                                <Form.Label>Titre</Form.Label>\n                                <Form.Control\n                                    readOnly={submit} \n                                    required\n                                    value={item.titre}\n                                    name='titre'\n                                    onChange={handleChange}\n                                    type=\"text\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} md=\"6\" controlId=\"formGridArtiste\">\n                                <Form.Label>Artiste</Form.Label>\n                                <Form.Control\n                                    readOnly={submit}\n                                    value={item.artistes}\n                                    name='artistes'\n                                    onChange={handleChange}\n                                    type=\"text\" placeholder=\"art1;art2\" />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group controlId=\"formGridGroup\">\n                            <Form.Label>Groupe</Form.Label>\n                            <Form.Control\n                                readOnly={submit}\n                                value={item.groupes}\n                                name='groupes'\n                                onChange={handleChange}\n                                type=\"text\" placeholder=\"grp1;grp2\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"exampleForm.Control\n                        readOnly={submit}Parole\">\n                            <Form.Label>Parole</Form.Label>\n                            <Form.Control\n                                readOnly={submit}\n                                value={item.paroles}\n                                name='paroles'\n                                onChange={handleChange}\n                                as=\"textarea\" rows=\"6\" />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <ButtonGroup>\n                            <Button \n                                disabled={submit}\n                                size=\"sm\" as={Link}\n                                to='/' variant=\"link\" onClick={handleClose}>\n                                création/avancée\n                            </Button>\n                            <Button \n                                disabled={submit}\n                                variant=\"outline-secondary\" onClick={handleClose}>\n                                Fermer\n                            </Button>\n                            <Button \n                                disabled={submit}\n                                variant=\"primary\" type=\"submit\">\n                                Enregistrer\n                            </Button>\n                        </ButtonGroup>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\n\nexport default function App() {\n    return (\n        <React.Fragment>\n            <h2>Conditions d'utilisation</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro veniam quis dolorem ipsa sapiente ex, hic obcaecati ducimus culpa. Doloribus itaque ducimus temporibus impedit tempora, totam, qui aspernatur nihil rem atque assumenda officiis officia ad sunt deserunt doloremque optio in quibusdam quaerat? Optio minus fugit id consequuntur blanditiis voluptates necessitatibus. Praesentium totam ut eos sint pariatur fugiat nulla nam perspiciatis velit! Illo explicabo aut, veniam veritatis quia sit accusamus. Fugit, dicta earum quibusdam ex quia quod esse aut distinctio saepe dolor sunt itaque facere ut quasi alias velit odio repellendus molestiae voluptatem suscipit. Atque in, repellendus dolore ea beatae impedit rem eum hic sit aspernatur saepe laboriosam facilis suscipit odio, dolores similique provident, molestiae neque enim doloremque recusandae cumque id.</p>\n        </React.Fragment>\n    )\n}","import Accueil from '../components/Accueil/index'\nimport Apropos from '../components/Apropos/index'\nimport Liste from '../components/Liste/index'\nimport Parole from '../components/Parole/index'\nimport SignUp from '../components/Session/signUp'\n\nexport default [\n    {\n        path: \"/\",\n        component: Accueil,\n        exact: true,\n        name: 'Accueil'\n    },\n    {\n        path: \"/apropos\",\n        component: Apropos,\n        exact: true,\n        name: 'À propos'\n    },\n    {\n        path: \"/liste\",\n        component: Liste,\n        exact: true,\n        name: 'Liste'\n    },\n];\n\nexport const routesParams = [\n    {\n        path: \"/liste=:id\",\n        component: Parole,\n        exact: true,\n    }, \n    {\n        path: \"/signup\",\n        component: SignUp,\n        exact: true,\n    },\n]","import React from 'react'\n\nexport default function App() {\n    return (\n        <div>\n            Accueil page.\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function App() {\n    return (\n        <div>\n            À propos page.\n        </div>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase\"\nimport { useParams } from 'react-router-dom'\nimport { Spinner, Jumbotron, Button, Alert, Form } from 'react-bootstrap'\nimport TextareaAutosize from 'react-textarea-autosize'\n\nexport default function App() {\n    const firebase = useContext(FirebaseContext)\n    const { id } = useParams()\n    const [submitting, setSubmitting] = useState(true)\n    const [item, setItem] = useState({\n        paroles: '',\n        titre: ''\n    })\n\n    const [doc, loading, error] = firebase.useDocument(\n        firebase.firestore().doc(`chansons/${id}`),\n        {\n            snapshotListenOptions: { includeMetadataChanges: true },\n        }\n    )\n\n    const handleEdit = (event) => {\n        setSubmitting(false)\n        event.preventDefault()\n    }\n\n    const handleChange = (event) => {\n        setItem({\n            ...item,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    useEffect(() => {\n        if (doc)\n            setItem({\n                titre: doc.data().titre,\n                paroles: doc.data().paroles\n            })\n    }, [doc])\n\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">Erreur: {error.message}</Alert>}\n            {loading && <Spinner animation=\"grow\" variant=\"primary\" />}\n            {doc &&\n                <Jumbotron>\n                    <Button variant=\"link\" size=\"sm\" onClick={handleEdit}>edité</Button>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInputTitre\">\n                            <Form.Label srOnly={submitting}>Titre</Form.Label>\n                            <Form.Control\n                                size=\"lg\"\n                                value={item.titre}\n                                name=\"titre\"\n                                plaintext={submitting}\n                                required\n                                onChange={handleChange}\n                                readOnly={submitting} type=\"text\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlTextareaParole\">\n                            <Form.Label srOnly={submitting}>Parole</Form.Label>\n                            <Form.Control\n                                value={item.paroles}\n                                name=\"paroles\"\n                                plaintext={submitting}\n                                required\n                                onChange={handleChange}\n                                readOnly={submitting} as={TextareaAutosize} />\n                        </Form.Group>\n                    </Form>\n                </Jumbotron>\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\nimport CGU from \"../CGU/index\"\n\nimport { Form, Button, Col, Alert, Spinner, Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nexport default function App() {\n\n    const firebase = useContext(FirebaseContext)\n\n    const history = useHistory()\n\n    const [validated, setValidated] = useState(false);\n    const [submit, setSubmit] = useState(false)\n    const [error, setError] = useState(\"\")\n    const [show, setShow] = useState(false)\n    const [register, setRegister] = useState({\n        email: \"\",\n        passwd: \"\",\n        nom: \"\",\n        prenom: \"\",\n        utilsateur: \"\",\n        ville: \"\",\n        apropos: \"\",\n        date_naissance: \"\",\n    })\n\n\n    const handleShowCondition = () => setShow(true)\n    const handleClose = () => setShow(false)\n\n    const handleChange = (event) => {\n        setRegister({\n            ...register,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity()) {\n            setRegister({\n                ...register,\n                date_creation: firebase.firestore.Timestamp.fromDate(new Date()),\n                date_naissance: moment(register.date_naissance).local('fr').format(\"LL\")\n            })\n            setSubmit(true)\n        }\n        setValidated(true);\n        event.preventDefault();\n    }\n\n    useEffect(() => {\n        if (submit) {\n            firebase.doSignUpWithEmailAndPasswd(register)\n                .then(() => {\n                    setRegister({\n                        email: \"\",\n                        passwd: \"\",\n                        nom: \"\",\n                        prenom: \"\",\n                        utilsateur: \"\",\n                        ville: \"\",\n                        apropos: \"\",\n                        date_naissance: \"\",\n                    })\n                    setValidated(false)\n                })\n                .then(() => {\n                    history.push('/')\n                })\n                .catch(e => {\n                    setError(e.message)\n                    setSubmit(false)\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [submit])\n\n    return (\n        <Form className=\"mb-4\" noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control required name=\"email\"\n                        value={register.email} onChange={handleChange}\n                        type=\"email\" placeholder=\"parole@tahitienne.com\" />\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridMotdepasse\">\n                    <Form.Label>Mot de passe</Form.Label>\n                    <Form.Control required name=\"passwd\"\n                        value={register.passwd} onChange={handleChange}\n                        type=\"password\" />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} md=\"4\" controlId=\"formGridNom\">\n                    <Form.Label>Nom</Form.Label>\n                    <Form.Control required name=\"nom\"\n                        value={register.nom} onChange={handleChange}\n                        type=\"text\" placeholder=\"Parole\"\n                    />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"formGridPrenom\">\n                    <Form.Label>Prénom</Form.Label>\n                    <Form.Control required name=\"prenom\"\n                        value={register.prenom} onChange={handleChange}\n                        type=\"text\" placeholder=\"Tahitienne\"\n                    />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"formGridNaissance\">\n                    <Form.Label>Date de naisssance</Form.Label>\n                    <Form.Control required name=\"date_naissance\"\n                        value={register.date_naissance} onChange={handleChange}\n                        type=\"date\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <hr />\n\n            <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridUtilisateur\">\n                    <Form.Label>Nom utilisateur</Form.Label>\n                    <Form.Control required name=\"utilsateur\"\n                        type=\"text\"\n                        value={register.utilsateur} onChange={handleChange}\n                    />\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"formGridville\">\n                    <Form.Label>Ville</Form.Label>\n                    <Form.Control required name=\"ville\"\n                        value={register.ville} onChange={handleChange}\n                        type=\"text\" placeholder=\"Paea\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <hr />\n\n            <Form.Row>\n            </Form.Row>\n\n            <Form.Group as={Col} controlId=\"formGridApropos\">\n                <Form.Label>À propos</Form.Label>\n                <Form.Control\n                    name=\"apropos\"\n                    as=\"textarea\"\n                    value={register.apropos} onChange={handleChange}\n                />\n            </Form.Group>\n\n            <Form.Group id=\"formGridCheckbox\">\n                <Button variant=\"link\"\n                    onClick={handleShowCondition} size=\"sm\">\n                    conditions d'utilisation\n                </Button>\n                <Form.Check required className=\"text-left\" type=\"checkbox\" label=\"J'accepte\" />\n            </Form.Group>\n\n            <Button variant={submit ? 'link' : 'primary'} type=\"submit\" disabled={submit}>\n                {submit ? <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                /> : 'Inscription'}\n            </Button>\n            {error && <Alert className=\"mt-2\" variant=\"danger\">{error}</Alert>}\n\n            <Modal scrollable show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Parole Héritage</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <CGU />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Form>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase\"\nimport { Button, Modal, Form, Dropdown, Alert, } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGoogle, faFacebookF } from '@fortawesome/free-brands-svg-icons'\nimport { Link } from 'react-router-dom'\n\nfunction NotUser() {\n    const firebase = useContext(FirebaseContext)\n    const [show, setShow] = useState(false)\n    const [validated, setValidated] = useState(false)\n    const [error, setError] = useState('')\n    const [submitting, setSubmitting] = useState(false)\n    const [register, setRegister] = useState({\n        email: '',\n        passwd: ''\n    })\n\n    const handleChange = (event) => {\n        setRegister({\n            ...register,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleShow = () => setShow(true)\n    const handleClose = () => {\n        setShow(false)\n        setError('')\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget\n        if (form.checkValidity()) {\n            setSubmitting(true)\n            firebase.doSignInWithEmailAndPasswd(register)\n                .then(() => {\n                    setShow(false)\n                    setRegister({ email: '', passwd: '' })\n                })\n                .catch(e => {\n                    setError(e.message)\n                    setSubmitting(false)\n                })\n        }\n        setValidated(true)\n        event.preventDefault()\n    }\n\n    const handleFacebook = () => {\n        firebase.doSignInWithFacebook()\n    }\n\n    const handleGoogle = () => {\n        firebase.doSignInWithGoogle()\n    }\n\n    return (\n        <React.Fragment>\n\n            <Button variant=\"dark\" onClick={handleShow}>\n                S'identifier\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Connectez-vous via\n                        <FontAwesomeIcon className=\"ml-2\"\n                            onClick={handleFacebook}\n                            icon={faFacebookF} color=\"#3b5998\" />\n                        <FontAwesomeIcon className=\"ml-2\"\n                            onClick={handleGoogle}\n                            icon={faGoogle} color=\"#DD4B39\" />\n                    </Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleSubmit} >\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email/Identifiant</Form.Label>\n                            <Form.Control required type=\"email\" readOnly={submitting}\n                                value={register.email} name=\"email\" onChange={handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required type=\"password\" readOnly={submitting}\n                                value={register.passwd} name=\"passwd\" onChange={handleChange} />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button as={Link} to=\"/signup\"\n                            variant=\"link\"\n                            onClick={handleClose}\n                            disabled={submitting}>\n                            créer un compte\n                        </Button>\n                        <Button variant=\"secondary\"\n                            onClick={handleClose}\n                            disabled={submitting}>\n                            Fermer\n                        </Button>\n                        <Button variant=\"primary\"\n                            type=\"submit\"\n                            disabled={submitting}>\n                            S'identifier\n                        </Button>\n                        {error &&\n                            <Alert variant=\"danger\">{error}</Alert>\n                        }\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nfunction User() {\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n\n    const handleClick = () => {\n        firebase.auth().signOut()\n    }\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                variant=\"info\"\n                id=\"dropdown-basic\">\n                <FontAwesomeIcon\n                    className=\"mr-1\"\n                    icon={faUserCog} />\n                {user.displayName}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"dropdown-menu-md-right\">\n                <Dropdown.Item as={Link} to='/profile'>Profile</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={handleClick} >Déconnecter</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport { User, NotUser }\n","import React, { useContext } from 'react'\nimport { FirebaseContext } from \"../../stores/Firebase/index\"\nimport { User, NotUser } from \"./session\"\n\nexport default function App() {\n    const firebase = useContext(FirebaseContext)\n    const user = firebase.user\n    return (\n        <React.Fragment>\n            {user && <User />}\n            {!user && <NotUser />}\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport routes from \"../../constants/routes\"\nimport Session from \"../Session/index\"\n\nexport default function App() {\n    return (\n        <Navbar className=\"mb-2\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Parole Héritage</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {routes.map(route => (\n                        <LinkContainer key={route.path} to={route.path}>\n                            <Nav.Link >{route.name}</Nav.Link>\n                        </LinkContainer>\n                    ))}\n                </Nav>\n                <Session />\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport routes, { routesParams } from '../../constants/routes'\nimport { Firebase } from \"../../stores/Firebase/index\";\nimport Navigation from \"../Navigation/index\"\n\nexport default function App() {\n    return (\n        <HashRouter basename='/'>\n            <Firebase>\n                <Navigation />\n                <div className=\"container\">\n                    <Switch>\n                        {routes.map(route => <Route key={route.path} {...route} />)}\n                        {routesParams.map(route => <Route key={route.path} {...route} />)}\n                    </Switch>\n                </div>\n            </Firebase>\n        </HashRouter>\n    )\n}\n"],"sourceRoot":""}